---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/discover/movie?api_key=6b310e0dcdbc8d375cce6ea3bf466eea&page=1&sort_by=popularity.desc
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.4.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 15 Jul 2021 01:16:40 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 9204cf44179493ed42c678800a26918b.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - 7_dlj11LNRgigtyiimWrN8Vnal1VYA4MBUIyy60_0ZYwZyHgY7l2Wg==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 15 Jul 2021 01:16:40 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/discover/movie?api_key=6b310e0dcdbc8d375cce6ea3bf466eea&page=2&sort_by=popularity.desc
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.4.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 15 Jul 2021 01:16:40 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 ce4b35590464ed34415a13badd946ebb.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - 9GZVDO2fn_t0eCbe_fNxSWE402gM4TnYdRkJKP10CygW9_63GNR5QQ==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 15 Jul 2021 01:16:40 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/discover/movie?api_key=6b310e0dcdbc8d375cce6ea3bf466eea&page=3&sort_by=popularity.desc
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.4.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 15 Jul 2021 01:16:40 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 ee9de9e6182ae0c8e8f119177e905245.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - T03SExs7mkmVEdrCrBHHqd-m844Jjxfy7u_8Rw1LpUni3-FiyUWWbg==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 15 Jul 2021 01:16:40 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/discover/movie?api_key=6b310e0dcdbc8d375cce6ea3bf466eea&page=4&sort_by=popularity.desc
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.4.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 15 Jul 2021 01:16:40 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 ee9de9e6182ae0c8e8f119177e905245.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - yV2Y-tfIBOYETAExHEMGxR2fLRKfYdJSh65KZevXxUxg1XaVBFj4Pg==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 15 Jul 2021 01:16:40 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/discover/movie?api_key=6b310e0dcdbc8d375cce6ea3bf466eea&page=5&sort_by=popularity.desc
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.4.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 15 Jul 2021 01:16:40 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 9204cf44179493ed42c678800a26918b.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - NlN5XcXWckn8UKarVoYlZusxg7i5YU23D0nQlRcgJurQNbpMjqeMxA==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 15 Jul 2021 01:16:40 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/discover/movie?api_key=6b310e0dcdbc8d375cce6ea3bf466eea&page=6&sort_by=popularity.desc
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.4.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 15 Jul 2021 01:16:41 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 29f1da35ce271d2cdc88184ed0c1f86d.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - DEvQ_uatyUsxPwSvfcghhTu1gKoIMGcXtnXuj5blaiSCHdyyxQHe_g==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 15 Jul 2021 01:16:41 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/discover/movie?api_key=6b310e0dcdbc8d375cce6ea3bf466eea&page=7&sort_by=popularity.desc
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.4.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 15 Jul 2021 01:16:41 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 e4ca364cc5959e3bf697ae231c5b56b0.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - c9X4jezX24FBCRXEX9J775yTz7ZroVbjOgruwrHlHO6sbcE_NIuU5Q==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 15 Jul 2021 01:16:41 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/discover/movie?api_key=6b310e0dcdbc8d375cce6ea3bf466eea&page=8&sort_by=popularity.desc
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.4.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 15 Jul 2021 01:16:41 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 264cccdb967e804907074b11d3a83242.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - Kb_6HBAH2DU2CdYPesOzS0Akr8w7DfG21vxDPsh3QOSC9ni825YYPA==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 15 Jul 2021 01:16:41 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/discover/movie?api_key=6b310e0dcdbc8d375cce6ea3bf466eea&page=9&sort_by=popularity.desc
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.4.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 15 Jul 2021 01:16:41 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 ee9de9e6182ae0c8e8f119177e905245.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - MNzgZ-uryibiTs4H4CsO9upPSvIROZteIhhSEuDCyYXyD-qTf-st8w==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 15 Jul 2021 01:16:41 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/discover/movie?api_key=6b310e0dcdbc8d375cce6ea3bf466eea&page=10&sort_by=popularity.desc
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.4.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 15 Jul 2021 01:16:41 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 48ea53c7edffa2cdbdc32f7d94966344.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - 4Nn2Q51GOTXYHKRYuz6-0Y24vYpVAOnQ2ynX0sUfAEj9T7c_XPXL2Q==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 15 Jul 2021 01:16:41 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/discover/movie?api_key=6b310e0dcdbc8d375cce6ea3bf466eea&page=11&sort_by=popularity.desc
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.4.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 15 Jul 2021 01:16:42 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 dc50b0effd72a7b2c19bcb0909cfae82.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - n0J0BRp-AHwP1_7ejtsFidiQtphHPbB1IYJHYZLatCL067pw9wpOtA==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 15 Jul 2021 01:16:42 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/discover/movie?api_key=6b310e0dcdbc8d375cce6ea3bf466eea&page=12&sort_by=popularity.desc
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.4.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 15 Jul 2021 01:16:42 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 6c02603f677dd5669f8ab3b41062340f.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - 32wSR0hbZlBBlhKVu6zOSDkwX4pAFSS2Dv56UDwSinl0d-tU_zKCvQ==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJwYWdlIjoxMiwicmVzdWx0cyI6W3siYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiL2xtNHhIMFl3RmJWdlRnZHRhdTF0aE5LNVM2Si5qcGciLCJnZW5yZV9pZHMiOls1MywyN10sImlkIjo1MTE5ODcsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IkNyYXdsIiwib3ZlcnZpZXciOiJXaGVuIGEgaHVnZSBodXJyaWNhbmUgaGl0cyBoZXIgaG9tZXRvd24gaW4gRmxvcmlkYSwgSGFsZXkgaWdub3JlcyBldmFjdWF0aW9uIG9yZGVycyB0byBsb29rIGZvciBoZXIgZmF0aGVyLiBBZnRlciBmaW5kaW5nIGhpbSBiYWRseSB3b3VuZGVkLCBib3RoIGFyZSB0cmFwcGVkIGJ5IHRoZSBmbG9vZC4gV2l0aCB2aXJ0dWFsbHkgbm8gdGltZSB0byBlc2NhcGUgdGhlIHN0b3JtLCB0aGV5IGRpc2NvdmVyIHRoYXQgcmlzaW5nIHdhdGVyIGxldmVscyBhcmUgdGhlIGxlYXN0IG9mIHRoZWlyIHByb2JsZW1zLiIsInBvcHVsYXJpdHkiOjEzMi42NjYsInBvc3Rlcl9wYXRoIjoiL21LeHBZUklyQ1pMeFpqTnFwb2NKMlJkUVc4di5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDE5LTA3LTExIiwidGl0bGUiOiJDcmF3bCIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo2LjMsInZvdGVfY291bnQiOjIxODd9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiL2xyTmJ0MjFoUmlyanlUSzBTZUxBMEw0UkFWUy5qcGciLCJnZW5yZV9pZHMiOlsyOCwyNyw4NzhdLCJpZCI6MzQwMTAyLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJUaGUgTmV3IE11dGFudHMiLCJvdmVydmlldyI6IkZpdmUgeW91bmcgbXV0YW50cywganVzdCBkaXNjb3ZlcmluZyB0aGVpciBhYmlsaXRpZXMgd2hpbGUgaGVsZCBpbiBhIHNlY3JldCBmYWNpbGl0eSBhZ2FpbnN0IHRoZWlyIHdpbGwsIGZpZ2h0IHRvIGVzY2FwZSB0aGVpciBwYXN0IHNpbnMgYW5kIHNhdmUgdGhlbXNlbHZlcy4iLCJwb3B1bGFyaXR5IjoxMjIuNTU1LCJwb3N0ZXJfcGF0aCI6Ii94Wk53OXh4dHdiRWYyNU5Zb3o1MktkYlhIUE0uanBnIiwicmVsZWFzZV9kYXRlIjoiMjAyMC0wOC0yNiIsInRpdGxlIjoiVGhlIE5ldyBNdXRhbnRzIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjYuMywidm90ZV9jb3VudCI6MjExOH0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvdmFtOVZITFpsOHRxTndrcDF6akVBeElPcmtrLmpwZyIsImdlbnJlX2lkcyI6WzEwNzUxLDE0LDEwNzcwXSwiaWQiOjY3MTU4Mywib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiVXBzaWRlLURvd24gTWFnaWMiLCJvdmVydmlldyI6Ik5vcnkgYW5kIGhlciBiZXN0IGZyaWVuZCBSZWluYSBlbnRlciB0aGUgU2FnZSBBY2FkZW15IGZvciBNYWdpY2FsIFN0dWRpZXMsIHdoZXJlIE5vcnnigJlzIHVuY29udmVudGlvbmFsIHBvd2VycyBsYW5kIGhlciBpbiBhIGNsYXNzIGZvciB0aG9zZSB3aXRoIHdvbmt5LCBvciDigJx1cHNpZGUtZG93bizigJ0gbWFnaWMuIFVuZGF1bnRlZCwgTm9yeSBzZXRzIG91dCB0byBwcm92ZSB0aGF0IHRoYXQgdXBzaWRlLWRvd24gbWFnaWMgY2FuIGJlIGp1c3QgYXMgcG93ZXJmdWwgYXMgcmlnaHQtc2lkZS11cC4iLCJwb3B1bGFyaXR5IjoxMjUuNTY3LCJwb3N0ZXJfcGF0aCI6Ii9oOXZUSjc4aDBTQVNZVXhnNGpWMEFRMDBvRjIuanBnIiwicmVsZWFzZV9kYXRlIjoiMjAyMC0wNy0zMSIsInRpdGxlIjoiVXBzaWRlLURvd24gTWFnaWMiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6Ny41LCJ2b3RlX2NvdW50IjoxNjZ9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjpudWxsLCJnZW5yZV9pZHMiOlsxOCwxNCwxMDc0OV0sImlkIjo1NTMzMDEsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IllvdXIgTmFtZSIsIm92ZXJ2aWV3IjoiSi5KLiBBYnJhbXMgYW5kIFBhcmFtb3VudCBQaWN0dXJlcyBoYXZlIGFubm91bmNlZCB0aGV54oCZbGwgYmUgdHVybmluZyB0aGUgY3JpdGljYWxseSBhY2NsYWltZWQgSmFwYW5lc2UgYW5pbWUgWW91ciBOYW1lIGludG8gYSBsaXZlLWFjdGlvbiBmaWxtLiIsInBvcHVsYXJpdHkiOjEyNS4wNiwicG9zdGVyX3BhdGgiOm51bGwsInJlbGVhc2VfZGF0ZSI6IiIsInRpdGxlIjoiWW91ciBOYW1lIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjAsInZvdGVfY291bnQiOjB9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiL2hyTWJBaTlmUFRtYzZFdHB5eUFnREt6bnB0dS5qcGciLCJnZW5yZV9pZHMiOlsxMDc0OSwxOF0sImlkIjozOTg4MTgsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IkNhbGwgTWUgYnkgWW91ciBOYW1lIiwib3ZlcnZpZXciOiJJbiAxOTgwcyBJdGFseSwgYSByZWxhdGlvbnNoaXAgYmVnaW5zIGJldHdlZW4gc2V2ZW50ZWVuLXllYXItb2xkIHRlZW5hZ2UgRWxpbyBhbmQgdGhlIG9sZGVyIGFkdWx0IG1hbiBoaXJlZCBhcyBoaXMgZmF0aGVyJ3MgcmVzZWFyY2ggYXNzaXN0YW50LiIsInBvcHVsYXJpdHkiOjExOC41MDUsInBvc3Rlcl9wYXRoIjoiL3RjTm5pbmlTNHJmcXJMSDBvT1Jpa0pmbkl3WS5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDE3LTA5LTAxIiwidGl0bGUiOiJDYWxsIE1lIGJ5IFlvdXIgTmFtZSIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo4LjMsInZvdGVfY291bnQiOjkyNjF9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiLzFaTkxKa1lTZlJjUGNvbmpVWWE1cFJlb0xIOS5qcGciLCJnZW5yZV9pZHMiOls5OSwxMDQwMl0sImlkIjo2MjcxNywib3JpZ2luYWxfbGFuZ3VhZ2UiOiJwdCIsIm9yaWdpbmFsX3RpdGxlIjoiTG9raSAtIEFybmFsZG8gQmFwdGlzdGEiLCJvdmVydmlldyI6Ikxva2kgYnJpbmdzIHRoZSB0cmFqZWN0b3J5IG9mIEFybmFsZG8gQmFwdGlzdGEgZnJvbSBjaGlsZGhvb2QsIHBhc3NpbmcgdGhyb3VnaCB0aGUgbW9zdCBzdWNjZXNzZnVsIHBoYXNlIGFzIGxlYWRlciBvZiB0aGUgTXV0YW50ZXMsIG1hcnJpYWdlIHRvIHNpbmdlciBSaXRhIExlZSBhbmQgdGhlbiBzZXBhcmF0aW9uLiBIZSBhbHNvIGdvZXMgdGhyb3VnaCB0aGUgZGVwcmVzc2lvbiB0aGF0IGRldmFzdGF0ZWQgaGlzIGxpZmUgYWZ0ZXIgdGhlIGdyb3VwIGVuZGVkIGFuZCB0aGF0IGxlZCBoaW0gdG8gYXR0ZW1wdCBzdWljaWRlLCBoaXMgc29sbyBjYXJlZXIsIHJhcHByb2NoZW1lbnQgd2l0aCBoaXMgYnJvdGhlciBhbmQgbWVtYmVyIG9mIHRoZSBNdXRhbnRlcywgU8OpcmdpbyBEaWFzLCBjdWxtaW5hdGluZyBpbiB0aGUgYmFuZCdzIHJldHVybiBpbiAyMDA2LiIsInBvcHVsYXJpdHkiOjE3NC41MTgsInBvc3Rlcl9wYXRoIjoiL2NZbDM5a0NNalAzN2UzOUNiSnF4V0h2ZjFlei5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDA4LTEwLTE3IiwidGl0bGUiOiJMb2tpIC0gQXJuYWxkbyBCYXB0aXN0YSIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo2LjksInZvdGVfY291bnQiOjl9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiL2JYSUxiVzFpMFdSU2hkNnM0TGZMS2RKTTZ6bS5qcGciLCJnZW5yZV9pZHMiOlsxMDc1MSwxNiwzNSwyOCwxMl0sImlkIjo0MjI0Niwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiVG9tIGFuZCBKZXJyeTogVGhlIEZhc3QgYW5kIHRoZSBGdXJyeSIsIm92ZXJ2aWV3IjoiQWZ0ZXIgYmVpbmcgZXZpY3RlZCBmcm9tIHRoZWlyIG9sZCBob3VzZSBieSBUb20ncyBvd25lciBmb3IgY2F1c2luZyBtYWpvciBkYW1hZ2UsIGNhdCBhbmQgbW91c2UgVG9tIGFuZCBKZXJyeSBlbnRlciBhIHJhY2UgZW50aXRsZWQgdGhlIFwiRmFidWxvdXMgU3VwZXIgUmFjZVwiIHRvIHdpbiBhIG1hbnNpb24uIiwicG9wdWxhcml0eSI6OTkuMzk4LCJwb3N0ZXJfcGF0aCI6Ii83UGVOcHo0bUR5UnFEeE1oQzBnMEZDcFZ3UEIuanBnIiwicmVsZWFzZV9kYXRlIjoiMjAwNS0xMC0xMSIsInRpdGxlIjoiVG9tIGFuZCBKZXJyeTogVGhlIEZhc3QgYW5kIHRoZSBGdXJyeSIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo2LjksInZvdGVfY291bnQiOjE2NX0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIva3ZSVDNHd2NucUdIelBqWElWclZQaFVpeDdaLmpwZyIsImdlbnJlX2lkcyI6WzEyLDI4LDg3OF0sImlkIjoyNzExMTAsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IkNhcHRhaW4gQW1lcmljYTogQ2l2aWwgV2FyIiwib3ZlcnZpZXciOiJGb2xsb3dpbmcgdGhlIGV2ZW50cyBvZiBBZ2Ugb2YgVWx0cm9uLCB0aGUgY29sbGVjdGl2ZSBnb3Zlcm5tZW50cyBvZiB0aGUgd29ybGQgcGFzcyBhbiBhY3QgZGVzaWduZWQgdG8gcmVndWxhdGUgYWxsIHN1cGVyaHVtYW4gYWN0aXZpdHkuIFRoaXMgcG9sYXJpemVzIG9waW5pb24gYW1vbmdzdCB0aGUgQXZlbmdlcnMsIGNhdXNpbmcgdHdvIGZhY3Rpb25zIHRvIHNpZGUgd2l0aCBJcm9uIE1hbiBvciBDYXB0YWluIEFtZXJpY2EsIHdoaWNoIGNhdXNlcyBhbiBlcGljIGJhdHRsZSBiZXR3ZWVuIGZvcm1lciBhbGxpZXMuIiwicG9wdWxhcml0eSI6MTI3LjIwNywicG9zdGVyX3BhdGgiOiIvckFHaVhhVWZQelk3Q0RFeU5LVW9mazNLdzJlLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjIwMTYtMDQtMjciLCJ0aXRsZSI6IkNhcHRhaW4gQW1lcmljYTogQ2l2aWwgV2FyIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjcuNCwidm90ZV9jb3VudCI6MTgyNzh9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiLzJxNGVjN1FOTm1MUVl4dnhqWnJCNEFaZWIyVy5qcGciLCJnZW5yZV9pZHMiOlsxOF0sImlkIjo3Nzg1NTIsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IlRoZSBQZW5pdGVudCBUaGllZiIsIm92ZXJ2aWV3IjoiVGhlIHN0b3J5IG9mIHRoZSB0d28gdW5uYW1lZCBtZW4gd2hvIHdlcmUgY3J1Y2lmaWVkIGFsb25nc2lkZSBKZXN1cyBhbmQgaG93IHRoZXkgY2FtZSB0byBiZSBiZXNpZGUgaGltIG9uIHRoZSBjcm9zcyB0aGF0IGZhdGVmdWwgZGF5LiBEaXNtYXMgYW5kIGhpcyBicm90aGVyIEpvdGhhbSwgYWxvbmcgd2l0aCBHZXN0YXMsIGFub3RoZXIgeW91bmcgbWFuIHdobyB3aWxsIHNoYXJlIHRoZWlyIGZhdGUsIHN1ZmZlciB0cmFnZWR5IGFuZCBpbmp1c3RpY2UgYXQgdGhlIGhhbmRzIG9mIGEgYmFuZCBvZiB0aGlldmVzIGFuZCBhIHJ1dGhsZXNzIFJvbWFuIGNlbnR1cmlvbi4gVGhlaXJzIGlzIGEgc3Rvcnkgb2Ygc3Vydml2YWwgYWdhaW5zdCB0aGUgb2RkcywgYnV0IHRoZXkgY2Fubm90IG91dHJ1biB0aGVpciBkZXN0aW55LiIsInBvcHVsYXJpdHkiOjEyNC4zMDgsInBvc3Rlcl9wYXRoIjoiLzJJSG1LRnpXRGtVVnFiTGZ5MDFNMmVTUU01ZS5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDIxLTAyLTI1IiwidGl0bGUiOiJUaGUgUGVuaXRlbnQgVGhpZWYiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6My41LCJ2b3RlX2NvdW50IjoyfSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii9mNmM1aHRROUFEMTNrU1Z5bXVzZExmUDdwNkEuanBnIiwiZ2VucmVfaWRzIjpbMTgsMTA3NTFdLCJpZCI6NzE2Nzk5LCJvcmlnaW5hbF9sYW5ndWFnZSI6ImphIiwib3JpZ2luYWxfdGl0bGUiOiI0NjHlgIvjga7jgYrjgbnjgpPjgajjgYYiLCJvdmVydmlldyI6IkthenVraSBTdXp1bW90byBpcyBkaXZvcmNlZCBhbmQgaGUgbGl2ZXMgd2l0aCBoaXMgMTUteWVhci1vbGQgc29uIEtvdWtpLiBLb3VraSBpcyBpbiBhIHN1c2NlcHRpYmxlIHRpbWUuIFRoZSBmYXRoZXIgZmVlbHMgZ3VpbHR5IGFib3V0IGhpcyBzb24uIEtvdWtpIHRoZW4gZmFpbHMgaGlzIGhpZ2ggc2Nob29sIGVudHJhbmNlIGV4YW0uIEluIHRoZSBzcHJpbmcgb2YgdGhlIGZvbGxvd2luZyB5ZWFyLCBLb3VraSBiYXJlbHkgcGFzc2VzIGhpcyBoaWdoIHNjaG9vbCBlbnRyYW5jZSBleGFtLiBLb3VraSBtZW50aW9ucyB0byBLYXp1a2kgdGhhdCBoZSBsaWtlcyBoaXMgZmF0aGVyJ3MgbHVuY2ggYm94LiBUaGUgZmF0aGVyIGFuZCBzb24gbWFrZSBhIHByb21pc2UgdG8gZWFjaCBvdGhlci4gS2F6dWtpIHByb21pc2VzIHRoYXQgaGUgd2lsbCBtYWtlIGEgbHVuY2ggYm94IGV2ZXJ5ZGF5IGZvciBLb3VraS4gS291a2kgcHJvbWlzZXMgdGhhdCBoZSB3aWxsIG5ldmVyIHNraXAgc2Nob29sLiIsInBvcHVsYXJpdHkiOjEyMi45OTQsInBvc3Rlcl9wYXRoIjoiLzhtc1FQeHVBNmZMcGRTZ2JxSUdDZFA1VkFTMC5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDIwLTExLTA2IiwidGl0bGUiOiI0NjEgRGF5cyBvZiBCZW50bzogQSBQcm9taXNlIEJldHdlZW4gRmF0aGVyIGFuZCBTb24iLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6Miwidm90ZV9jb3VudCI6MX0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvb2JFeE9VOXFEbk1jeHZXUHVtb0QxNG94dXA1LmpwZyIsImdlbnJlX2lkcyI6WzUzLDI3LDE4XSwiaWQiOjUwOTYzNSwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiQWxvbmUiLCJvdmVydmlldyI6IkEgcmVjZW50bHkgd2lkb3dlZCB0cmF2ZWxlciBpcyBraWRuYXBwZWQgYnkgYSBjb2xkIGJsb29kZWQga2lsbGVyLCBvbmx5IHRvIGVzY2FwZSBpbnRvIHRoZSB3aWxkZXJuZXNzIHdoZXJlIHNoZSBpcyBmb3JjZWQgdG8gYmF0dGxlIGFnYWluc3QgdGhlIGVsZW1lbnRzIGFzIGhlciBwdXJzdWVyIGNsb3NlcyBpbiBvbiBoZXIuIiwicG9wdWxhcml0eSI6MTA5LjQ2NCwicG9zdGVyX3BhdGgiOiIvbjlPelptUE1uVnJWMGNNUTdhbVgwRHRCa1FILmpwZyIsInJlbGVhc2VfZGF0ZSI6IjIwMjAtMDktMTAiLCJ0aXRsZSI6IkFsb25lIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjYuMiwidm90ZV9jb3VudCI6MzA0fSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii9wa3hQa0hPUEpqT3Z6ZlFPY2xBTkVCVDhPZksuanBnIiwiZ2VucmVfaWRzIjpbMTIsMTQsOTY0OF0sImlkIjo2NzUsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IkhhcnJ5IFBvdHRlciBhbmQgdGhlIE9yZGVyIG9mIHRoZSBQaG9lbml4Iiwib3ZlcnZpZXciOiJUaGUgcmViZWxsaW9uIGJlZ2lucyEgTG9yZCBWb2xkZW1vcnQgaGFzIHJldHVybmVkLCBidXQgdGhlIE1pbmlzdHJ5IG9mIE1hZ2ljIGlzIGRvaW5nIGV2ZXJ5dGhpbmcgaXQgY2FuIHRvIGtlZXAgdGhlIHdpemFyZGluZyB3b3JsZCBmcm9tIGtub3dpbmcgdGhlIHRydXRoIOKAkyBpbmNsdWRpbmcgYXBwb2ludGluZyBNaW5pc3RyeSBvZmZpY2lhbCBEb2xvcmVzIFVtYnJpZGdlIGFzIHRoZSBuZXcgRGVmZW5jZSBBZ2FpbnN0IHRoZSBEYXJrIEFydHMgcHJvZmVzc29yIGF0IEhvZ3dhcnRzLiBXaGVuIFVtYnJpZGdlIHJlZnVzZXMgdG8gdGVhY2ggcHJhY3RpY2FsIGRlZmVuc2l2ZSBtYWdpYywgUm9uIGFuZCBIZXJtaW9uZSBjb252aW5jZSBIYXJyeSB0byBzZWNyZXRseSB0cmFpbiBhIHNlbGVjdCBncm91cCBvZiBzdHVkZW50cyBmb3IgdGhlIHdpemFyZGluZyB3YXIgdGhhdCBsaWVzIGFoZWFkLiBBIHRlcnJpZnlpbmcgc2hvd2Rvd24gYmV0d2VlbiBnb29kIGFuZCBldmlsIGF3YWl0cyBpbiB0aGlzIGVudGhyYWxsaW5nIGZpbG0gdmVyc2lvbiBvZiB0aGUgZmlmdGggbm92ZWwgaW4gSi5LLiBSb3dsaW5n4oCZcyBIYXJyeSBQb3R0ZXIgc2VyaWVzLiBQcmVwYXJlIGZvciBiYXR0bGUhIiwicG9wdWxhcml0eSI6MTIzLjU2MiwicG9zdGVyX3BhdGgiOiIvczgzNlBSd0hrTGpyT0pyZlcwZW83QjROSk9mLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjIwMDctMDYtMjgiLCJ0aXRsZSI6IkhhcnJ5IFBvdHRlciBhbmQgdGhlIE9yZGVyIG9mIHRoZSBQaG9lbml4IiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjcuNywidm90ZV9jb3VudCI6MTUwMTN9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiL3dYc1F2bGk2dFdxamE1MXBZeFhORzFMRklHVi5qcGciLCJnZW5yZV9pZHMiOlsxMDc1MSwxNiwxOF0sImlkIjo4NTg3LCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJUaGUgTGlvbiBLaW5nIiwib3ZlcnZpZXciOiJBIHlvdW5nIGxpb24gcHJpbmNlIGlzIGNhc3Qgb3V0IG9mIGhpcyBwcmlkZSBieSBoaXMgY3J1ZWwgdW5jbGUsIHdobyBjbGFpbXMgaGUga2lsbGVkIGhpcyBmYXRoZXIuIFdoaWxlIHRoZSB1bmNsZSBydWxlcyB3aXRoIGFuIGlyb24gcGF3LCB0aGUgcHJpbmNlIGdyb3dzIHVwIGJleW9uZCB0aGUgU2F2YW5uYWgsIGxpdmluZyBieSBhIHBoaWxvc29waHk6IE5vIHdvcnJpZXMgZm9yIHRoZSByZXN0IG9mIHlvdXIgZGF5cy4gQnV0IHdoZW4gaGlzIHBhc3QgY29tZXMgdG8gaGF1bnQgaGltLCB0aGUgeW91bmcgcHJpbmNlIG11c3QgZGVjaWRlIGhpcyBmYXRlOiBXaWxsIGhlIHJlbWFpbiBhbiBvdXRjYXN0IG9yIGZhY2UgaGlzIGRlbW9ucyBhbmQgYmVjb21lIHdoYXQgaGUgbmVlZHMgdG8gYmU/IiwicG9wdWxhcml0eSI6MTE4Ljc1OCwicG9zdGVyX3BhdGgiOiIvc0tDcjc4TVhTTGl4d21aOER5SkxycE1zZDE1LmpwZyIsInJlbGVhc2VfZGF0ZSI6IjE5OTQtMDYtMjMiLCJ0aXRsZSI6IlRoZSBMaW9uIEtpbmciLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6OC4zLCJ2b3RlX2NvdW50IjoxNDE3M30seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvbUlwQ3hCV056NlNIQ1FCZTJLMlBGcjVNQjdmLmpwZyIsImdlbnJlX2lkcyI6WzE2LDEwNzUxXSwiaWQiOjYyMjExLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJNb25zdGVycyBVbml2ZXJzaXR5Iiwib3ZlcnZpZXciOiJBIGxvb2sgYXQgdGhlIHJlbGF0aW9uc2hpcCBiZXR3ZWVuIE1pa2UgYW5kIFN1bGxleSBkdXJpbmcgdGhlaXIgZGF5cyBhdCBNb25zdGVycyBVbml2ZXJzaXR5IOKAlCB3aGVuIHRoZXkgd2VyZW4ndCBuZWNlc3NhcmlseSB0aGUgYmVzdCBvZiBmcmllbmRzLiIsInBvcHVsYXJpdHkiOjExNC44NDUsInBvc3Rlcl9wYXRoIjoiL3VwYU1CRW9uR2VaR1FjM3h0VVZaT2ZlMWxHbC5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDEzLTA2LTE5IiwidGl0bGUiOiJNb25zdGVycyBVbml2ZXJzaXR5IiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjcsInZvdGVfY291bnQiOjg0MDV9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiL3Z4WmF3OEM1dzRYbFlFUHRwdHpLSjdsQklGSC5qcGciLCJnZW5yZV9pZHMiOls1MywyNywxOF0sImlkIjo1OTkyODEsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IkZlYXIgb2YgUmFpbiIsIm92ZXJ2aWV3IjoiQSB0ZWVuYWdlIGdpcmwgbGl2aW5nIHdpdGggc2NoaXpvcGhyZW5pYSBiZWdpbnMgdG8gc3VzcGVjdCBoZXIgbmVpZ2hib3IgaGFzIGtpZG5hcHBlZCBhIGNoaWxkLiBIZXIgcGFyZW50cyB0cnkgZGVzcGVyYXRlbHkgdG8gaGVscCBoZXIgbGl2ZSBhIG5vcm1hbCBsaWZlLCB3aXRob3V0IGV4cG9zaW5nIHRoZWlyIG93biB0cmFnaWMgc2VjcmV0cywgYW5kIHRoZSBvbmx5IHBlcnNvbiB3aG8gYmVsaWV2ZXMgaGVyIGlzIENhbGViIOKAkyBhIGJveSBzaGUgaXNu4oCZdCBldmVuIHN1cmUgZXhpc3RzLiIsInBvcHVsYXJpdHkiOjExOC4wNjIsInBvc3Rlcl9wYXRoIjoiL2Iyc2hhTkE0Rjh6Tkl3b1JZcjMzbFBUaUZmbC5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDIxLTAyLTEyIiwidGl0bGUiOiJGZWFyIG9mIFJhaW4iLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6Ny4zLCJ2b3RlX2NvdW50IjoyNTZ9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiL2syV3lEdzJOVFVJV251RXM1Z1Q3d2dyQ1FnNi5qcGciLCJnZW5yZV9pZHMiOlsyOCw1M10sImlkIjo0MjMyMDQsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IkFuZ2VsIEhhcyBGYWxsZW4iLCJvdmVydmlldyI6IkFmdGVyIGEgdHJlYWNoZXJvdXMgYXR0YWNrLCBTZWNyZXQgU2VydmljZSBhZ2VudCBNaWtlIEJhbm5pbmcgaXMgY2hhcmdlZCB3aXRoIGF0dGVtcHRpbmcgdG8gYXNzYXNzaW5hdGUgUHJlc2lkZW50IFRydW1idWxsLiBDaGFzZWQgYnkgaGlzIG93biBjb2xsZWFndWVzIGFuZCB0aGUgRkJJLCBCYW5uaW5nIGJlZ2lucyBhIHJhY2UgYWdhaW5zdCB0aGUgY2xvY2sgdG8gY2xlYXIgaGlzIG5hbWUuIiwicG9wdWxhcml0eSI6MTA3Ljk2NiwicG9zdGVyX3BhdGgiOiIvZmFwWGQzdjlxVGNOQlRtMzlaQzRLVVZRRE5mLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjIwMTktMDgtMjEiLCJ0aXRsZSI6IkFuZ2VsIEhhcyBGYWxsZW4iLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6Ni41LCJ2b3RlX2NvdW50IjoyNDA4fSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii83R1dEcmp4ZUJzaDVvbmFZZjVYSGpJTTlCQTEuanBnIiwiZ2VucmVfaWRzIjpbMjgsNTNdLCJpZCI6NTc4MTg5LCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJCbGFjayBhbmQgQmx1ZSIsIm92ZXJ2aWV3IjoiQSBmYXN0LXBhY2VkIGFjdGlvbiB0aHJpbGxlciBhYm91dCBhIHJvb2tpZSBjb3Agd2hvIGluYWR2ZXJ0ZW50bHkgY2FwdHVyZXMgdGhlIG11cmRlciBvZiBhIHlvdW5nIGRydWcgZGVhbGVyIG9uIGhlciBib2R5IGNhbS4gQWZ0ZXIgcmVhbGl6aW5nIHRoYXQgdGhlIG11cmRlciB3YXMgY29tbWl0dGVkIGJ5IGNvcnJ1cHQgY29wcywgc2hlIHRlYW1zIHVwIHdpdGggdGhlIG9uZSBwZXJzb24gZnJvbSBoZXIgY29tbXVuaXR5IHdobyBpcyB3aWxsaW5nIHRvIGhlbHAgaGVyIGFzIHNoZSB0cmllcyB0byBlc2NhcGUgYm90aCB0aGUgY3JpbWluYWxzIG91dCBmb3IgcmV2ZW5nZSBhbmQgdGhlIHBvbGljZSB3aG8gYXJlIGRlc3BlcmF0ZSB0byBkZXN0cm95IHRoZSBpbmNyaW1pbmF0aW5nIGZvb3RhZ2UuIiwicG9wdWxhcml0eSI6MTIxLjY4OCwicG9zdGVyX3BhdGgiOiIvMWNTSEVLWVlQOERwaTRvMWlCVmQ0VTc1Rll0LmpwZyIsInJlbGVhc2VfZGF0ZSI6IjIwMTktMTAtMjUiLCJ0aXRsZSI6IkJsYWNrIGFuZCBCbHVlIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjYuNywidm90ZV9jb3VudCI6NTE0fSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii81Z1RRbW5HWUt4RGZtVVdKOUdVV3Fyc3pSeE4uanBnIiwiZ2VucmVfaWRzIjpbMTA3NTEsMTYsOTY0OCwzNV0sImlkIjo3MjE2NTYsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IkhhcHB5IEhhbGxvd2VlbiwgU2Nvb2J5LURvbyEiLCJvdmVydmlldyI6IlNjb29ieS1Eb28gYW5kIHRoZSBnYW5nIHRlYW0gdXAgd2l0aCB0aGVpciBwYWxzLCBCaWxsIE55ZSBUaGUgU2NpZW5jZSBHdXkgYW5kIEVsdmlyYSBNaXN0cmVzcyBvZiB0aGUgRGFyaywgdG8gc29sdmUgdGhpcyBteXN0ZXJ5IG9mIGdpZ2FudGljIHByb3BvcnRpb25zIGFuZCBzYXZlIENyeXN0YWwgQ292ZSEiLCJwb3B1bGFyaXR5IjoxMTkuMTMsInBvc3Rlcl9wYXRoIjoiLzVhTDcxZTBYQmdIWjZ6ZFdjV2V1RWh3RDJHdy5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDIwLTEwLTA2IiwidGl0bGUiOiJIYXBweSBIYWxsb3dlZW4sIFNjb29ieS1Eb28hIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjcuOCwidm90ZV9jb3VudCI6MTM3fSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii9xNjJicFE2N3FhWFkwdTZiMndGRW5RWUliUGQuanBnIiwiZ2VucmVfaWRzIjpbMTA3NTEsMTIsMTYsMzUsMTQsMThdLCJpZCI6MzAxNTI4LCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJUb3kgU3RvcnkgNCIsIm92ZXJ2aWV3IjoiV29vZHkgaGFzIGFsd2F5cyBiZWVuIGNvbmZpZGVudCBhYm91dCBoaXMgcGxhY2UgaW4gdGhlIHdvcmxkIGFuZCB0aGF0IGhpcyBwcmlvcml0eSBpcyB0YWtpbmcgY2FyZSBvZiBoaXMga2lkLCB3aGV0aGVyIHRoYXQncyBBbmR5IG9yIEJvbm5pZS4gQnV0IHdoZW4gQm9ubmllIGFkZHMgYSByZWx1Y3RhbnQgbmV3IHRveSBjYWxsZWQgXCJGb3JreVwiIHRvIGhlciByb29tLCBhIHJvYWQgdHJpcCBhZHZlbnR1cmUgYWxvbmdzaWRlIG9sZCBhbmQgbmV3IGZyaWVuZHMgd2lsbCBzaG93IFdvb2R5IGhvdyBiaWcgdGhlIHdvcmxkIGNhbiBiZSBmb3IgYSB0b3kuIiwicG9wdWxhcml0eSI6MTEzLjAxOSwicG9zdGVyX3BhdGgiOiIvdzlrUjhxYm1RMDFId252SzRhbHZuUTJjYTBMLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjIwMTktMDYtMTkiLCJ0aXRsZSI6IlRveSBTdG9yeSA0IiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjcuNiwidm90ZV9jb3VudCI6NzE1Mn0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvcDdXV3VkU3pySURGcDdjdEsybTFERFczazlyLmpwZyIsImdlbnJlX2lkcyI6WzM1LDI4LDEyLDg3OF0sImlkIjo1NTA5ODgsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IkZyZWUgR3V5Iiwib3ZlcnZpZXciOiJBIGJhbmsgdGVsbGVyIGNhbGxlZCBHdXkgcmVhbGl6ZXMgaGUgaXMgYSBiYWNrZ3JvdW5kIGNoYXJhY3RlciBpbiBhbiBvcGVuIHdvcmxkIHZpZGVvIGdhbWUgY2FsbGVkIEZyZWUgQ2l0eSB0aGF0IHdpbGwgc29vbiBnbyBvZmZsaW5lLiIsInBvcHVsYXJpdHkiOjEzNC4zNzMsInBvc3Rlcl9wYXRoIjoiLzdCZHBFU1k3dVJpNkJOT3VqOW5JaGtMYzc3NS5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDIxLTA4LTExIiwidGl0bGUiOiJGcmVlIEd1eSIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjowLCJ2b3RlX2NvdW50IjowfV0sInRvdGFsX3BhZ2VzIjo1MDAsInRvdGFsX3Jlc3VsdHMiOjEwMDAwfQ==
  recorded_at: Thu, 15 Jul 2021 01:16:42 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/discover/movie?api_key=6b310e0dcdbc8d375cce6ea3bf466eea&page=13&sort_by=popularity.desc
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.4.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 15 Jul 2021 01:16:42 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 23d87d8c2ce38e34462e6c134d187eeb.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - Ncp0RQYYIF9NOXWuAmkU6GkTm1covJSe-5lPzcSv4wkUlOStJulZfg==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 15 Jul 2021 01:16:42 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/discover/movie?api_key=6b310e0dcdbc8d375cce6ea3bf466eea&page=14&sort_by=popularity.desc
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.4.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 15 Jul 2021 01:16:42 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 91f1c114eac2b00f07286bc49dddd7e5.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - 6nxp7qtviYJRDZiZHlR0o7aTRfy80fvzMzyXHeaTtGPEo5kd-6skhQ==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 15 Jul 2021 01:16:42 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/discover/movie?api_key=6b310e0dcdbc8d375cce6ea3bf466eea&page=15&sort_by=popularity.desc
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.4.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 15 Jul 2021 01:16:42 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 91f1c114eac2b00f07286bc49dddd7e5.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - GzVAP6IWyLSkayZ3Cy0zwv7QdgtsRfC2Kblwpr1ypplTt7UZtjm9Tg==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 15 Jul 2021 01:16:42 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/discover/movie?api_key=6b310e0dcdbc8d375cce6ea3bf466eea&page=16&sort_by=popularity.desc
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.4.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 15 Jul 2021 01:16:43 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 9cefde3a3c84cc779d3c26a39c2e4430.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - B1540uhm2Xye9tsUQqBFQYxM02SZzrNt5PtCBpUPYJSysrPw08tU0A==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 15 Jul 2021 01:16:43 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/discover/movie?api_key=6b310e0dcdbc8d375cce6ea3bf466eea&page=17&sort_by=popularity.desc
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.4.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 15 Jul 2021 01:16:43 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 ee9de9e6182ae0c8e8f119177e905245.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - 18KqrTJriRrP28WeG7BQQSDTQaTzlANU5iF1GRD-dUBCWTSlyN3YTQ==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 15 Jul 2021 01:16:43 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/discover/movie?api_key=6b310e0dcdbc8d375cce6ea3bf466eea&page=18&sort_by=popularity.desc
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.4.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 15 Jul 2021 01:16:43 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 c4fb40b7909e4dd897bba2e297b284e7.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - 3x9ZsgPeWYDYJJ00hYfOQH3DmFXTsuvkbO2u3XZwCe-A_tZ1SU2ohA==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 15 Jul 2021 01:16:43 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/discover/movie?api_key=6b310e0dcdbc8d375cce6ea3bf466eea&page=19&sort_by=popularity.desc
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.4.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 15 Jul 2021 01:16:43 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 91f1c114eac2b00f07286bc49dddd7e5.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - v8XS1pcwLJ3YOx1MZnCilBtFIElLIeXPf88uLAKvcBaGbbCoZLLlDA==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJwYWdlIjoxOSwicmVzdWx0cyI6W3siYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiL3RDc1lRVGtReDd2a25EbVR3NjY2SzFYeEFkeC5qcGciLCJnZW5yZV9pZHMiOlsyOCwxOF0sImlkIjozNDg4OTMsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IkJveWthOiBVbmRpc3B1dGVkIElWIiwib3ZlcnZpZXciOiJJbiB0aGUgZm91cnRoIGluc3RhbGxtZW50IG9mIHRoZSBmaWdodGluZyBmcmFuY2hpc2UsIEJveWthIGlzIHNob290aW5nIGZvciB0aGUgYmlnIGxlYWd1ZXMgd2hlbiBhbiBhY2NpZGVudGFsIGRlYXRoIGluIHRoZSByaW5nIG1ha2VzIGhpbSBxdWVzdGlvbiBldmVyeXRoaW5nIGhlIHN0YW5kcyBmb3IuIFdoZW4gaGUgZmluZHMgb3V0IHRoZSB3aWZlIG9mIHRoZSBtYW4gaGUgYWNjaWRlbnRhbGx5IGtpbGxlZCBpcyBpbiB0cm91YmxlLCBCb3lrYSBvZmZlcnMgdG8gZmlnaHQgaW4gYSBzZXJpZXMgb2YgaW1wb3NzaWJsZSBiYXR0bGVzIHRvIGZyZWUgaGVyIGZyb20gYSBsaWZlIG9mIHNlcnZpdHVkZSIsInBvcHVsYXJpdHkiOjg5LjUxOSwicG9zdGVyX3BhdGgiOiIvN1FHZElKV1dUa1BoVmpwUTB6QTZ6NjlraG9kLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjIwMTYtMDgtMDEiLCJ0aXRsZSI6IkJveWthOiBVbmRpc3B1dGVkIElWIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjYuOSwidm90ZV9jb3VudCI6ODg4fSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii9wdUpLZ05jV2FHZ01rNVZIYW5TU29tVVRwbXcuanBnIiwiZ2VucmVfaWRzIjpbMTA3NTEsMTQsMTYsMTA3NDldLCJpZCI6MTEyMjQsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IkNpbmRlcmVsbGEiLCJvdmVydmlldyI6IkNpbmRlcmVsbGEgaGFzIGZhaXRoIGhlciBkcmVhbXMgb2YgYSBiZXR0ZXIgbGlmZSB3aWxsIGNvbWUgdHJ1ZS4gV2l0aCBoZWxwIGZyb20gaGVyIGxveWFsIG1pY2UgZnJpZW5kcyBhbmQgYSB3YXZlIG9mIGhlciBGYWlyeSBHb2Rtb3RoZXIncyB3YW5kLCBDaW5kZXJlbGxhJ3MgcmFncyBhcmUgbWFnaWNhbGx5IHR1cm5lZCBpbnRvIGEgZ2xvcmlvdXMgZ293biBhbmQgb2ZmIHNoZSBnb2VzIHRvIHRoZSBSb3lhbCBCYWxsLiBCdXQgd2hlbiB0aGUgY2xvY2sgc3RyaWtlcyBtaWRuaWdodCwgdGhlIHNwZWxsIGlzIGJyb2tlbiwgbGVhdmluZyBhIHNpbmdsZSBnbGFzcyBzbGlwcGVyLi4uIHRoZSBvbmx5IGtleSB0byB0aGUgdWx0aW1hdGUgZmFpcnktdGFsZSBlbmRpbmchIiwicG9wdWxhcml0eSI6OTEuODA4LCJwb3N0ZXJfcGF0aCI6Ii80bnNzQmNRVUJhZENUQmpyQWtYNDZtVkVLdHMuanBnIiwicmVsZWFzZV9kYXRlIjoiMTk1MC0wMi0yMiIsInRpdGxlIjoiQ2luZGVyZWxsYSIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo3LCJ2b3RlX2NvdW50Ijo1MjMwfSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii9oMElNeXZpRGhYOVFzUnJocXV1VGVqbWp4UEMuanBnIiwiZ2VucmVfaWRzIjpbNTMsMjddLCJpZCI6Njc1NDkwLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJUaGUgVW5mYW1pbGlhciIsIm92ZXJ2aWV3IjoiQSBCcml0aXNoIEFybXkgZG9jdG9yIGNvbWVzIGJhY2sgZnJvbSBhIHdhciwgdGhpbmtpbmcgdGhhdCBzaGUgaGFzIFBUU0Qgb25seSB0byBkaXNjb3ZlciB0aGF0IHRoZXJlIGlzIGEgbW9yZSBkYXVudGluZyBtYWxldm9sZW5jZSBhdCB3b3JrIG1ha2luZyB0aGUgbGlmZSB0aGF0IHNoZSBrbmV3IHVuZmFtaWxpYXIuIiwicG9wdWxhcml0eSI6OTAuMjMxLCJwb3N0ZXJfcGF0aCI6Ii9YdDM3bG9Qd0hqaXBDMXFhQ2JmTGZEY0Z1NC5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDIwLTA4LTIxIiwidGl0bGUiOiJUaGUgVW5mYW1pbGlhciIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo2LjMsInZvdGVfY291bnQiOjYxfSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii9za3ZJNHJZRnJLWFM3M0JKeFdHSDU0T21sdnYuanBnIiwiZ2VucmVfaWRzIjpbMTA3NTEsMTQsMTJdLCJpZCI6NDIwODA5LCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJNYWxlZmljZW50OiBNaXN0cmVzcyBvZiBFdmlsIiwib3ZlcnZpZXciOiJNYWxlZmljZW50IGFuZCBoZXIgZ29kZGF1Z2h0ZXIgQXVyb3JhIGJlZ2luIHRvIHF1ZXN0aW9uIHRoZSBjb21wbGV4IGZhbWlseSB0aWVzIHRoYXQgYmluZCB0aGVtIGFzIHRoZXkgYXJlIHB1bGxlZCBpbiBkaWZmZXJlbnQgZGlyZWN0aW9ucyBieSBpbXBlbmRpbmcgbnVwdGlhbHMsIHVuZXhwZWN0ZWQgYWxsaWVzLCBhbmQgZGFyayBuZXcgZm9yY2VzIGF0IHBsYXkuIiwicG9wdWxhcml0eSI6OTIuNDYyLCJwb3N0ZXJfcGF0aCI6Ii92bG9OVFNjSjN3N2p3Tnd0TkdvRzhEYlRUaHYuanBnIiwicmVsZWFzZV9kYXRlIjoiMjAxOS0xMC0xNiIsInRpdGxlIjoiTWFsZWZpY2VudDogTWlzdHJlc3Mgb2YgRXZpbCIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo3LjQsInZvdGVfY291bnQiOjQ0ODl9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiLzdjR3NhNnNxVEZzcndzMzIycDBRYUllN0dVWC5qcGciLCJnZW5yZV9pZHMiOlsyOCwyN10sImlkIjo1NzE2MjcsIm9yaWdpbmFsX2xhbmd1YWdlIjoia28iLCJvcmlnaW5hbF90aXRsZSI6IuyCrOyekCIsIm92ZXJ2aWV3IjoiQWZ0ZXIgd2FraW5nIHVwIHdpdGggbXlzdGVyaW91cyB3b3VuZHMgb24gaGlzIGhhbmRzLCBhIGNoYW1waW9uIGZpZ2h0ZXIgZmluZHMgaGltc2VsZiBpbiBhbiBvdGhlcndvcmxkbHkgYmF0dGxlIGFnYWluc3QgZXZpbCBmb3JjZXMgdGhhdCB3cmVhayBoYXZvYyBpbiB0aGUgaHVtYW4gd29ybGQuIiwicG9wdWxhcml0eSI6NzkuODA4LCJwb3N0ZXJfcGF0aCI6Ii85WjJxVDlpWllMenpzQ1NZdTdBNFNFUXNLWDAuanBnIiwicmVsZWFzZV9kYXRlIjoiMjAxOS0wNy0zMSIsInRpdGxlIjoiVGhlIERpdmluZSBGdXJ5IiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjYuNiwidm90ZV9jb3VudCI6MTYzfSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii9lSFRab1htQjR2bkRxQU5aWFBaY2RBaVlRbzUuanBnIiwiZ2VucmVfaWRzIjpbMTYsMTgsMTA3NDksMTQsODc4XSwiaWQiOjY2NzUyMCwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJqYSIsIm9yaWdpbmFsX3RpdGxlIjoi5rOj44GN44Gf44GE56eB44Gv54yr44KS44GL44G244KLIiwib3ZlcnZpZXciOiJNaXlvIFwiTXVnZVwiIFNhc2FraSBpcyBhIHBlY3VsaWFyIHNlY29uZC15ZWFyIGp1bmlvciBoaWdoIHN0dWRlbnQgd2hvIGhhcyBmYWxsZW4gaW4gbG92ZSB3aXRoIGhlciBjbGFzc21hdGUgS2VudG8gSGlub2RlLiBNdWdlIHJlc29sdXRlbHkgcHVyc3VlcyBLZW50byBldmVyeSBkYXksIGJ1dCBoZSB0YWtlcyBubyBub3RpY2Ugb2YgaGVyLiBOZXZlcnRoZWxlc3MsIHdoaWxlIGNhcnJ5aW5nIGEgc2VjcmV0IHNoZSBjYW4gdGVsbCBubyBvbmUsIE11Z2UgY29udGludWVzIHRvIHB1cnN1ZSBLZW50by4gTXVnZSBkaXNjb3ZlcnMgYSBtYWdpYyBtYXNrIHRoYXQgYWxsb3dzIGhlciB0byB0cmFuc2Zvcm0gaW50byBhIGNhdCBuYW1lZCBUYXLFjS4gVGhlIG1hZ2ljIGxldHMgTXVnZSBnZXQgY2xvc2UgdG8gS2VudG8sIGJ1dCBldmVudHVhbGx5IGl0IG1heSBhbHNvIG1ha2UgaGVyIHVuYWJsZSB0byB0cmFuc2Zvcm0gYmFjayB0byBhIGh1bWFuLiIsInBvcHVsYXJpdHkiOjg5LjM0MywicG9zdGVyX3BhdGgiOiIvNmlua1JNMVhHQkc1dlJoY2xDUFdmTWVucDdOLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjIwMjAtMDYtMTgiLCJ0aXRsZSI6IkEgV2hpc2tlciBBd2F5IiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjguMSwidm90ZV9jb3VudCI6Nzg5fSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii9jMVlRY3Bxc2xqQzdsWUVtVEllZnRjbDIyVlMuanBnIiwiZ2VucmVfaWRzIjpbNTMsMjhdLCJpZCI6NDg0NjQxLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImZyIiwib3JpZ2luYWxfdGl0bGUiOiJBbm5hIiwib3ZlcnZpZXciOiJCZW5lYXRoIEFubmEgUG9saWF0b3ZhJ3Mgc3RyaWtpbmcgYmVhdXR5IGxpZXMgYSBzZWNyZXQgdGhhdCB3aWxsIHVubGVhc2ggaGVyIGluZGVsaWJsZSBzdHJlbmd0aCBhbmQgc2tpbGwgdG8gYmVjb21lIG9uZSBvZiB0aGUgd29ybGQncyBtb3N0IGZlYXJlZCBnb3Zlcm5tZW50IGFzc2Fzc2lucy4iLCJwb3B1bGFyaXR5Ijo5NC4xNjEsInBvc3Rlcl9wYXRoIjoiLzJVMG9BVkFFMGxEUmhObUpQUFloRFc5a1E4dC5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDE5LTA2LTE5IiwidGl0bGUiOiJBbm5hIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjYuNywidm90ZV9jb3VudCI6MTc3NH0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvMmtSNzlXQ21WSXpGWVFXSDlYM0xxY2VodkMyLmpwZyIsImdlbnJlX2lkcyI6WzE4XSwiaWQiOjUxNDQzOSwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiQnJlYWt0aHJvdWdoIiwib3ZlcnZpZXciOiJUcmFnZWR5IHN0cmlrZXMgd2hlbiBhIHdvbWFuIG5hbWVkIEpveWNlJ3Mgc29uIGZhbGxzIHRocm91Z2ggdGhlIGljZSBvbiBhIGZyb3plbiBsYWtlIGFuZCBpcyB0cmFwcGVkIHVuZGVyd2F0ZXIgZm9yIG92ZXIgMTUgbWludXRlcy4gQWZ0ZXIgYmVpbmcgcnVzaGVkIHRvIHRoZSBob3NwaXRhbCwgdGhlIDE0LXllYXItb2xkIGJveSBjb250aW51ZXMgdG8gZmlnaHQgZm9yIGhpcyBsaWZlIGFzIEpveWNlLCBoZXIgaHVzYmFuZCBhbmQgdGhlaXIgcGFzdG9yIHN0YXkgYnkgaGlzIGJlZHNpZGUgYW5kIHByYXkgZm9yIGEgbWlyYWNsZS4iLCJwb3B1bGFyaXR5Ijo3NS4xMywicG9zdGVyX3BhdGgiOiIvODVCZlpBWWg0ekMxVTZOQnoyWmtYYjN5Njd2LmpwZyIsInJlbGVhc2VfZGF0ZSI6IjIwMTktMDQtMTAiLCJ0aXRsZSI6IkJyZWFrdGhyb3VnaCIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo3LjcsInZvdGVfY291bnQiOjc1MX0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvbFZTTWdaVUJFNFhUVmFQQkVCQWN6cmU0ZjFXLmpwZyIsImdlbnJlX2lkcyI6Wzk2NDgsODc4LDUzXSwiaWQiOjU2NTc0Mywib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiVGhlIFZhc3Qgb2YgTmlnaHQiLCJvdmVydmlldyI6IkF0IHRoZSBkYXduIG9mIHRoZSBzcGFjZS1yYWNlLCB0d28gcmFkaW8tb2JzZXNzZWQgdGVlbnMgZGlzY292ZXIgYSBzdHJhbmdlIGZyZXF1ZW5jeSBvdmVyIHRoZSBhaXJ3YXZlcyBpbiB3aGF0IGJlY29tZXMgdGhlIG1vc3QgaW1wb3J0YW50IG5pZ2h0IG9mIHRoZWlyIGxpdmVzIGFuZCBpbiB0aGUgaGlzdG9yeSBvZiB0aGVpciBzbWFsbCB0b3duLiIsInBvcHVsYXJpdHkiOjg1LjY1LCJwb3N0ZXJfcGF0aCI6Ii9zdU9SaWR0R0tQTzZ0V3dOcWl3R3ZObzg1ejMuanBnIiwicmVsZWFzZV9kYXRlIjoiMjAyMC0wNS0xNSIsInRpdGxlIjoiVGhlIFZhc3Qgb2YgTmlnaHQiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6Ni42LCJ2b3RlX2NvdW50Ijo2MTV9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiLzdtOHp5MGVKMGQwSm1FeU9rQzJmU3gxS2JZVS5qcGciLCJnZW5yZV9pZHMiOlsxMiwxNF0sImlkIjo0MjgwNDUsIm9yaWdpbmFsX2xhbmd1YWdlIjoicnUiLCJvcmlnaW5hbF90aXRsZSI6ItCi0LDQudC90LAg0L/QtdGH0LDRgtC4INCU0YDQsNC60L7QvdCwIiwib3ZlcnZpZXciOiJUaGUgUnVzc2lhbiBDemFyIFBldGVyIHRoZSBHcmVhdCBjb21taXNzaW9ucyBKb25hdGhhbiBHcmVlbiwgYW4gRW5nbGlzaCB0cmF2ZWxsZXIsIHRvIG1hcCB0aGUgRmFyIEVhc3QgdGVycml0b3JpZXMgb2YgdGhlIFJ1c3NpYW4gRW1waXJlLiBHcmVlbiBzZXRzIG9mZiBvbiB5ZXQgYW5vdGhlciBsb25nIGpvdXJuZXksIGZ1bGwgb2YgdW5iZWxpZXZhYmxlIGFkdmVudHVyZXMsIHdoaWNoIGV2ZW50dWFsbHkgbGVhZHMgaGltIHRvIENoaW5hLiBPbiBoaXMgd2F5LCB0aGUgZmFtb3VzIGNhcnRvZ3JhcGhlciBtYWtlcyBicmVhdGgtdGFraW5nIGRpc2NvdmVyaWVzLCBtZWV0cyBteXN0ZXJpb3VzIGNyZWF0dXJlcywgQ2hpbmVzZSBwcmluY2Vzc2VzLCBkZWFkbHkgbWFzdGVycyBvZiBvcmllbnRhbCBtYXJ0aWFsIGFydHMsIGFuZCBldmVuIEx1biBWYW4sIHRoZSBLaW5nIG9mIERyYWdvbnMsIGhpbXNlbGYuIFdoYXQgY291bGQgYmUgbW9yZSBwZXJpbG91cyB0aGFuIGxvb2tpbmcgaW50byB0aGUgZXllcyBvZiBWaXk/IE9ubHkgbWVldGluZyBoaW0gYWdhaW7igKYgV2hhdCB3aWxsIHByZXZhaWwgdGhpcyB0aW1lIOKAlCB0aGUgdW5mbGluY2hpbmcgc2NlcHRpY2lzbSBvZiB0aGUgc2NpZW50aXN0IG9yIGFuY2llbnQgYmxhY2sgbWFnaWMsIHdoaWNoIGhhcyBhbHJlYWR5IGdhaW5lZCBpbmZsdWVuY2Ugb3ZlciB0aGUgRmFyIEVhc3QgTGFuZHM/IiwicG9wdWxhcml0eSI6ODkuMzY5LCJwb3N0ZXJfcGF0aCI6Ii9tZ002N3F3Z1pnc3ZueFVCa0U0VHp6YmlEVVMuanBnIiwicmVsZWFzZV9kYXRlIjoiMjAxOS0wOC0xNiIsInRpdGxlIjoiSXJvbiBNYXNrIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjYuNCwidm90ZV9jb3VudCI6MjI5fSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii8xSThRaHJySEtheEdFM2UwZjJTNzVrcXJ4ZDkuanBnIiwiZ2VucmVfaWRzIjpbMTYsMjgsODc4XSwiaWQiOjM5MTA2LCJvcmlnaW5hbF9sYW5ndWFnZSI6ImphIiwib3JpZ2luYWxfdGl0bGUiOiLjg4njg6njgrTjg7Pjg5zjg7zjg6vvvLog6LaF5oim5aOr5pKD56C0ISHli53jga7jga/jgqrjg6zjgaAiLCJvdmVydmlldyI6IkphZ2EgQmFkYSwgTXIuIFNhdGFuJ3Mgb2xkIHNwYXJyaW5nIHBhcnRuZXIsIGhhcyBpbnZpdGVkIFNhdGFuIHRvIGhpcyBwZXJzb25hbCBpc2xhbmQgdG8gaG9sZCBhIGdydWRnZSBtYXRjaC4gVHJ1bmtzIGFuZCBHb3RlbiBkZWNpZGUgdG8gY29tZSBmb3IgdGhlIGFkdmVudHVyZSBhbmQgQW5kcm9pZCAjMTggaXMgZm9sbG93aW5nIFNhdGFuIGZvciB0aGUgbW9uZXkgaGUgb3dlcyBoZXIuIExpdHRsZSBkbyB0aGV5IGtub3cgdGhhdCBKYWdhIEJhZGEncyBzY2llbnRpc3QgaGF2ZSBmb3VuZCBhIHdheSB0byByZXN1cnJlY3QgQnJvbHksIHRoZSBsZWdlbmRhcnkgU3VwZXIgU2FpeWFuLiIsInBvcHVsYXJpdHkiOjgwLjUzMiwicG9zdGVyX3BhdGgiOiIvem5kcUtSN1RURFZXTWdEMENTcUFSVnVnWG9QLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjE5OTQtMDctMDkiLCJ0aXRsZSI6IkRyYWdvbiBCYWxsIFo6IEJpby1Ccm9seSIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo1LjgsInZvdGVfY291bnQiOjM1N30seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvbDJBbzNOWGZyWHRXemxCWjVEblAybDJzekpqLmpwZyIsImdlbnJlX2lkcyI6WzE2LDEyXSwiaWQiOjU5NTE3Miwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiVGhlIFBpbGdyaW0ncyBQcm9ncmVzcyIsIm92ZXJ2aWV3IjoiQW4gZXBpYyBqb3VybmV5LCBmYWl0aGZ1bGx5IGFkYXB0ZWQgdG8gbW9kZXJuLWRheS4gQ2hyaXN0aWFuIGZhY2VzIGRpc3RyYWN0aW9ucywgY2hhbGxlbmdlcywgYW5kIHBlcmlscyBhdCBldmVyeSB0dXJuIG9mIHRoZSB3YXkuIEJ1dCBlbmRzIHZpY3RvcmlvdXMsIHdpdGggaGVscGZ1bCBndWlkZXMsIGFzIGhlIHN0YXlzIG9uIHRoZSBuYXJyb3cgcGF0aCB0byB0aGUgZGlzdGFudCBDZWxlc3RpYWwgQ2l0eS4iLCJwb3B1bGFyaXR5Ijo4Mi4wNywicG9zdGVyX3BhdGgiOiIvdnRmc054QXNESEVsRnZZSFVjOUtod3FnMTdZLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjIwMTktMDQtMTgiLCJ0aXRsZSI6IlRoZSBQaWxncmltJ3MgUHJvZ3Jlc3MiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6Ny43LCJ2b3RlX2NvdW50Ijo1MX0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvaklORDZRMkpjNktmcDRmTHpnemY1YW4xQzNzLmpwZyIsImdlbnJlX2lkcyI6WzM1LDgwXSwiaWQiOjgxMjU5Miwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJwdCIsIm9yaWdpbmFsX3RpdGxlIjoiT3MgU2FsYWZyw6FyaW9zIiwib3ZlcnZpZXciOiJBZnRlciBhIGJvdGNoZWQgc2NhbSwgQ2zDs3ZpcyBidW1wcyBpbnRvIExvaGFuZSwgaGlzIGVzdHJhbmdlZCBmb3N0ZXIgc2lzdGVyLiBJbiBhIGJpbmQsIHRoZXkgc29vbiByZWFsaXplIHRoZSBvbmx5IHdheSBvdXQgaXMgdG8gYmFuZCB0b2dldGhlci4iLCJwb3B1bGFyaXR5Ijo4Ny44NDQsInBvc3Rlcl9wYXRoIjoiL2dkOVBjSWd6VjNZV2EwYzdpQ0VDRzFUdVhYNS5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDIxLTA0LTI4IiwidGl0bGUiOiJHZXQgdGhlIEdyaWZ0IiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjYuNywidm90ZV9jb3VudCI6NTh9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiL3NEbnNvYmVmVm1FZDdFaDhJb1Y3OWJ2TmNjNy5qcGciLCJnZW5yZV9pZHMiOlsxMiwxNl0sImlkIjozNjYxNzAsIm9yaWdpbmFsX2xhbmd1YWdlIjoiamEiLCJvcmlnaW5hbF90aXRsZSI6IumBiuKYhuaIr+KYhueOiyBUSEUgREFSSyBTSURFIE9GIERJTUVOU0lPTlMiLCJvdmVydmlldyI6Ill1Z2kgYW5kIEthaWJhIGhhdmUgYSBzcGVjaWFsIGR1ZWwgdGhhdCB0cmFuc2NlbmRzIGRpbWVuc2lvbnMuIiwicG9wdWxhcml0eSI6ODAuMTYsInBvc3Rlcl9wYXRoIjoiL25GUWtuMUtFMElzM0ZVVzB5UFBnZFZ2Q25sby5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDE2LTA0LTIzIiwidGl0bGUiOiJZdS1HaS1PaCE6IFRoZSBEYXJrIFNpZGUgb2YgRGltZW5zaW9ucyIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo3LjUsInZvdGVfY291bnQiOjIyM30seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvMVRQemVjWEFiNXVDcW1zY0E2V2FRcUtNbXZWLmpwZyIsImdlbnJlX2lkcyI6WzM1XSwiaWQiOjU1NDU5Niwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlcyIsIm9yaWdpbmFsX3RpdGxlIjoiTm8gTWFuY2hlcyBGcmlkYSAyIiwib3ZlcnZpZXciOiJFeC1jb24gWmVxdWkgYW5kIGNvbXBhbnkgY29tZSBiYWNrIGZvciBhIG5ldyBhZHZlbnR1cmUuIiwicG9wdWxhcml0eSI6NzguNDA0LCJwb3N0ZXJfcGF0aCI6Ii9yRzdyRG9UZTFaRWE5MzZlb25EQ2tWNzZua3guanBnIiwicmVsZWFzZV9kYXRlIjoiMjAxOS0wMy0xNSIsInRpdGxlIjoiTm8gTWFuY2hlcyBGcmlkYSAyIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjguMSwidm90ZV9jb3VudCI6NTcyfSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii9meWRVY2JrcUx5RVNDRmE5VTVYS3FpOGRJVmouanBnIiwiZ2VucmVfaWRzIjpbMTYsMTIsMTA3NTFdLCJpZCI6MTA5NDQ1LCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJGcm96ZW4iLCJvdmVydmlldyI6IllvdW5nIHByaW5jZXNzIEFubmEgb2YgQXJlbmRlbGxlIGRyZWFtcyBhYm91dCBmaW5kaW5nIHRydWUgbG92ZSBhdCBoZXIgc2lzdGVyIEVsc2HigJlzIGNvcm9uYXRpb24uIEZhdGUgdGFrZXMgaGVyIG9uIGEgZGFuZ2Vyb3VzIGpvdXJuZXkgaW4gYW4gYXR0ZW1wdCB0byBlbmQgdGhlIGV0ZXJuYWwgd2ludGVyIHRoYXQgaGFzIGZhbGxlbiBvdmVyIHRoZSBraW5nZG9tLiBTaGUncyBhY2NvbXBhbmllZCBieSBpY2UgZGVsaXZlcnkgbWFuIEtyaXN0b2ZmLCBoaXMgcmVpbmRlZXIgU3ZlbiwgYW5kIHNub3dtYW4gT2xhZi4gT24gYW4gYWR2ZW50dXJlIHdoZXJlIHNoZSB3aWxsIGZpbmQgb3V0IHdoYXQgZnJpZW5kc2hpcCwgY291cmFnZSwgZmFtaWx5LCBhbmQgdHJ1ZSBsb3ZlIHJlYWxseSBtZWFucy4iLCJwb3B1bGFyaXR5Ijo5NS44NjgsInBvc3Rlcl9wYXRoIjoiL21iUHJyYnQ4YlNMY0hTQkNIblJjbFBsTVpQbC5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDEzLTExLTIwIiwidGl0bGUiOiJGcm96ZW4iLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6Ny4zLCJ2b3RlX2NvdW50IjoxMzMyNH0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvakxTODA1TjRRbUxWUHVyUXd1YUNGVE5FWnNzLmpwZyIsImdlbnJlX2lkcyI6WzEwNzUxLDE2LDEyLDE0XSwiaWQiOjQzNjkzMSwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJqYSIsIm9yaWdpbmFsX3RpdGxlIjoi5YqH5aC054mIIOODneOCseODg+ODiOODouODs+OCueOCv+ODvCDjgq3jg5/jgavjgY3jgoHjgZ/vvIEiLCJvdmVydmlldyI6IkFzaCBLZXRjaHVtIHdha2VzIHVwIGxhdGUgb25lIG1vcm5pbmcgYWZ0ZXIgaGF2aW5nIGJyb2tlbiBoaXMgYWxhcm0gY2xvY2sgaW4gaGlzIHNsZWVwLiBIZSBldmVudHVhbGx5IG1ha2VzIGl0IHRvIFByb2Zlc3NvciBPYWsncyBsYWIsIGJ1dCBpcyB0b2xkIHRoYXQgdGhlIHRocmVlIHN0YXJ0ZXIgTGlzdCBvZiBQb2vDqW1vbiAoQnVsYmFzYXVyLCBTcXVpcnRsZSwgYW5kIENoYXJtYW5kZXIpIGhhdmUgYWxyZWFkeSBiZWVuIHRha2VuIGJ5IFRyYWluZXJzIHdobyB3ZXJlIG9uIHRpbWUuIEhvd2V2ZXIsIE9hayByZXZlYWxzIHRoYXQgaGUgaGFzIG9uZSBtb3JlIFBva8OpbW9uLCBhbiBFbGVjdHJpYy10eXBlIG5hbWVkIFBpa2FjaHUuIERlc3BpdGUgaXRzIHZvbGF0aWxlIGFuZCBmZWlzdHkgcGVyc29uYWxpdHksIGFzIHdlbGwgYXMgaXRzIHJlZnVzYWwgdG8gZ2V0IGluc2lkZSBhIFBva8OpIEJhbGwsIEFzaCBoYXBwaWx5IHRha2VzIFBpa2FjaHUgZm9yIGhpcyBqb3VybmV5LiIsInBvcHVsYXJpdHkiOjkxLjM1OSwicG9zdGVyX3BhdGgiOiIvY21wT2FpUnRqbmhMTkYyaVBzbE1YQ09jVkouanBnIiwicmVsZWFzZV9kYXRlIjoiMjAxNy0wNy0xNSIsInRpdGxlIjoiUG9rw6ltb24gdGhlIE1vdmllOiBJIENob29zZSBZb3UhIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjcsInZvdGVfY291bnQiOjQ1NH0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvdE04OTRBdEU3VVFUSkVvUUc2cUY2bWRmU1VULmpwZyIsImdlbnJlX2lkcyI6WzEyLDI4LDg3OCwzNV0sImlkIjoyODM5OTUsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6Ikd1YXJkaWFucyBvZiB0aGUgR2FsYXh5IFZvbC4gMiIsIm92ZXJ2aWV3IjoiVGhlIEd1YXJkaWFucyBtdXN0IGZpZ2h0IHRvIGtlZXAgdGhlaXIgbmV3Zm91bmQgZmFtaWx5IHRvZ2V0aGVyIGFzIHRoZXkgdW5yYXZlbCB0aGUgbXlzdGVyaWVzIG9mIFBldGVyIFF1aWxsJ3MgdHJ1ZSBwYXJlbnRhZ2UuIiwicG9wdWxhcml0eSI6OTEuMzgxLCJwb3N0ZXJfcGF0aCI6Ii95NE1CaDBFakJsTXVPenY5YXhNNHFKbG1oenouanBnIiwicmVsZWFzZV9kYXRlIjoiMjAxNy0wNC0xOSIsInRpdGxlIjoiR3VhcmRpYW5zIG9mIHRoZSBHYWxheHkgVm9sLiAyIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjcuNiwidm90ZV9jb3VudCI6MTY4MTR9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiL281UVdlT1pySGYwazMwODhtRzR0c2l0RVRmbC5qcGciLCJnZW5yZV9pZHMiOls4MCwxOCw1M10sImlkIjo1OTk4NDUsIm9yaWdpbmFsX2xhbmd1YWdlIjoiaXQiLCJvcmlnaW5hbF90aXRsZSI6IkwnSW1tb3J0YWxlIiwib3ZlcnZpZXciOiJDaXJvJ3MgYm9keSBpcyBzaW5raW5nIGluIHRoZSBkYXJrIHdhdGVycyBvZiB0aGUgR3VsZiBvZiBOYXBsZXMuIEFuZCBhcyBpdCBzaW5rcyBkZWVwZXIgYW5kIGRlZXBlciwgbWVtb3JpZXMgZW1lcmdlLiBUaGUgc291bmRzIG11ZmZsZWQgYnkgdGhlIHdhdGVyIG1lcmdlIHdpdGggdGhlIHNjcmVhbXMgb2YgZmxlZWluZyBwZW9wbGUuIEl0IGlzIDE5ODAsIHRoZSBlYXJ0aCBzaGFrZXMsIHRoZSBwYWxhY2UgY29sbGFwc2VzLCBidXQgdW5kZXIgdGhlIHJ1YmJsZSB5b3UgY2FuIGhlYXIgdGhlIGNyeSBvZiBhIG5ld2Jvcm4gYmFieSBzdGlsbCBhbGl2ZS4gVGVuIHllYXJzIGxhdGVyLCB3ZSBmaW5kIHRoYXQgbmV3LWJvcm4gYmFieSBhcyBpdCBzdXJ2aXZlcyBhcyBpdCBjYW4gb24gdGhlIHN0cmVldHMgb2YgTmFwbGVzLCBub2JvZHkncyBzb24uIFZpdmlkIG1lbW9yaWVzIG9mIGEgY3JpbWluYWwgZWR1Y2F0aW9uIHRoYXQgbWFkZSBoaW0gd2hhdCBoZSBpczogQ2lybyBEaSBNYXJ6aW8sIHRoZSBJbW1vcnRhbC4gUHJlcXVlbCBvZiB0aGUgXCJHb21vcnJhXCIgdHYgc2hvdy4iLCJwb3B1bGFyaXR5IjoxMDUuNTg5LCJwb3N0ZXJfcGF0aCI6Ii9rV0xzT0kyQ1BwZENCaUF4cEFYUGRvRTk0MzUuanBnIiwicmVsZWFzZV9kYXRlIjoiMjAxOS0xMi0wNSIsInRpdGxlIjoiVGhlIEltbW9ydGFsIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjYuOCwidm90ZV9jb3VudCI6MzEzfSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii92MGJGVFhuTE5oOWNqdnBJY2tKcElNMnQ5bmYuanBnIiwiZ2VucmVfaWRzIjpbMjddLCJpZCI6NjMxNTgzLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJTYWNyaWZpY2UiLCJvdmVydmlldyI6IklzYWFjIGFuZCBoaXMgcHJlZ25hbnQgd2lmZSB2aXNpdCBhIHJlbW90ZSBOb3J3ZWdpYW4gdmlsbGFnZSB0byBjbGFpbSBhbiB1bmV4cGVjdGVkIGluaGVyaXRhbmNlLiBUaGUgY291cGxlIGZpbmRzIHRoZW1zZWx2ZXMgY2F1Z2h0IGluIGEgbmlnaHRtYXJlIHdoZW4gdGhleSBlbmNvdW50ZXIgYSBzaW5pc3RlciBjdWx0IHRoYXQgd29yc2hpcHMgYSBzZWEtZHdlbGxpbmcgZGVpdHkuIiwicG9wdWxhcml0eSI6ODYuNTgxLCJwb3N0ZXJfcGF0aCI6Ii94WEk1TGc2bUpMRWVzVGdnUkpCcnE1MHZycVUuanBnIiwicmVsZWFzZV9kYXRlIjoiMjAyMS0wMi0wOSIsInRpdGxlIjoiU2FjcmlmaWNlIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjUuMSwidm90ZV9jb3VudCI6MTF9XSwidG90YWxfcGFnZXMiOjUwMCwidG90YWxfcmVzdWx0cyI6MTAwMDB9
  recorded_at: Thu, 15 Jul 2021 01:16:43 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/discover/movie?api_key=6b310e0dcdbc8d375cce6ea3bf466eea&page=20&sort_by=popularity.desc
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.4.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 15 Jul 2021 01:16:43 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 d29afc70fc2fdadee440493854714224.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - 1F0TUQFXFJXBML32UD4I1MyEvPhHTCb-tlxN-TpKXMQnLX4jF0NbPg==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 15 Jul 2021 01:16:43 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/discover/movie?api_key=6b310e0dcdbc8d375cce6ea3bf466eea&page=21&sort_by=popularity.desc
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.4.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 15 Jul 2021 01:16:44 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 dc50b0effd72a7b2c19bcb0909cfae82.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - 3DTUqhi44oqPwwlg6t1WoR8C7kIGDHC5AjHe-x4PqSdOPr2wPyBxTw==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 15 Jul 2021 01:16:44 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/discover/movie?api_key=6b310e0dcdbc8d375cce6ea3bf466eea&page=22&sort_by=popularity.desc
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.4.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 15 Jul 2021 01:16:44 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 235fa9476ee502b13c0801d1fa3b57a2.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - c2Kt16fY4wKfaFwEMp9SPzqSlEo7ouMsSu5MB5jB0eyCkFSUj6upUg==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 15 Jul 2021 01:16:44 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/discover/movie?api_key=6b310e0dcdbc8d375cce6ea3bf466eea&page=23&sort_by=popularity.desc
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.4.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 15 Jul 2021 01:16:44 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 ce4b35590464ed34415a13badd946ebb.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - L4_VN0Q4ST9OlWBzDeGbypEZN9U_JNsTzuP6ViapWXQnvC_7blVK1A==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 15 Jul 2021 01:16:44 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/discover/movie?api_key=6b310e0dcdbc8d375cce6ea3bf466eea&page=24&sort_by=popularity.desc
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.4.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 15 Jul 2021 01:16:44 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 91f1c114eac2b00f07286bc49dddd7e5.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - WBC71sWUE3EKtNd6LzFHqWWQVZzT0EcTHYhfeXQBobpdHBHDFG5YGQ==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 15 Jul 2021 01:16:44 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/discover/movie?api_key=6b310e0dcdbc8d375cce6ea3bf466eea&page=25&sort_by=popularity.desc
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.4.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 15 Jul 2021 01:16:44 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 b7f0c5734a286f56595c1e1b456020a2.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - SKYiEg1WT-hFS3_ISIKQ6nziWi8A9yqJBajbsdroglUFlEHeqKLnjA==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 15 Jul 2021 01:16:44 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/discover/movie?api_key=6b310e0dcdbc8d375cce6ea3bf466eea&page=26&sort_by=popularity.desc
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.4.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 15 Jul 2021 01:16:45 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 264cccdb967e804907074b11d3a83242.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - D8YdogdYLm97W5Z0sTKII3U52acNS1KfF6EGK5IyjZQOYBeyosbeqA==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJwYWdlIjoyNiwicmVzdWx0cyI6W3siYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiL2tTdTJIYXFCSlNhSU42c1VkMFJjaXdOelRTZS5qcGciLCJnZW5yZV9pZHMiOlsxOF0sImlkIjo2NzY2OTEsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IlRoZSBDcm9zc3JvYWRzIG9mIEh1bnRlciBXaWxkZSIsIm92ZXJ2aWV3IjoiSHVudGVyIFdpbGRlIGlzIHRoZSBsZWFkZXIgb2YgYSBncm91cCBvZiBDaHJpc3RpYW4gc3Vydml2YWxpc3RzIHdobyBhcmUgdHJ5aW5nIHRvIGxpdmUgYXMgbm9ybWFsIGFzIHBvc3NpYmxlIHR3byB5ZWFycyBhZnRlciBhbiBFTVAgYXR0YWNrIGFuZCBrbm9ja2luZyBhbGwgdGhlIHBvd2VyIGRvd24uIEluIGEgd29ybGQgb2YgY2hhb3MgbGl2aW5nIGRheSB0byBkYXkgaGFzIGJlY29tZSBtb3JlIHRyZWFjaGVyb3VzLiBCdXQgdGhhdCBpcyBub3RoaW5nIGNvbXBhcmVkIHRvIHdoZW4gdGhlIGdhdGVzIG9mIGhlbGwgYXJlIG9wZW5lZCB1cCBhbmQgZGVtb25zIGFyZSBjb21taXNzaW9uZWQgdG8gc2VlayBhbmQgZGVzdHJveSB0aGUgcmVtYWluaW5nIGJlbGlldmVycyBvbiBlYXJ0aC4gVGhlaXIgdGFyZ2V0cyBhcmUgc2V0IG9uIEh1bnRlci4gSWYgdGhleSBjYW4gYnJlYWsgaGltIHRoZSB3aG9sZSB0b3duIG9mIENyb3Nzcm9hZHMgd2lsbCBmb2xsb3cuIiwicG9wdWxhcml0eSI6NzAuOTU2LCJwb3N0ZXJfcGF0aCI6Ii95a3dVYzFiN2JrS2NweFQ3TVR4cnY1czRKT3YuanBnIiwicmVsZWFzZV9kYXRlIjoiMjAxOS0wOS0zMCIsInRpdGxlIjoiVGhlIENyb3Nzcm9hZHMgb2YgSHVudGVyIFdpbGRlIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjgsInZvdGVfY291bnQiOjh9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiL2VWSFZ3UDcxZWwyMGZvZmtDSG83OGViUXY3US5qcGciLCJnZW5yZV9pZHMiOlsyOCwxMiwzNSw4MCw1M10sImlkIjozNDM2NjgsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IktpbmdzbWFuOiBUaGUgR29sZGVuIENpcmNsZSIsIm92ZXJ2aWV3IjoiV2hlbiBhbiBhdHRhY2sgb24gdGhlIEtpbmdzbWFuIGhlYWRxdWFydGVycyB0YWtlcyBwbGFjZSBhbmQgYSBuZXcgdmlsbGFpbiByaXNlcywgRWdnc3kgYW5kIE1lcmxpbiBhcmUgZm9yY2VkIHRvIHdvcmsgdG9nZXRoZXIgd2l0aCB0aGUgQW1lcmljYW4gYWdlbmN5IGtub3duIGFzIHRoZSBTdGF0ZXNtYW4gdG8gc2F2ZSB0aGUgd29ybGQuIiwicG9wdWxhcml0eSI6NzAuNTk4LCJwb3N0ZXJfcGF0aCI6Ii8zNHhCTDZCWE5ZRnF0SE85emhjZ29ha1M0YVAuanBnIiwicmVsZWFzZV9kYXRlIjoiMjAxNy0wOS0yMCIsInRpdGxlIjoiS2luZ3NtYW46IFRoZSBHb2xkZW4gQ2lyY2xlIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjcsInZvdGVfY291bnQiOjc3OTR9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiLzJMTDFqSHROS0poVERjM3RBMWRpZnNBbkx1aS5qcGciLCJnZW5yZV9pZHMiOls1MywyNywzNSw4MF0sImlkIjo2NjcxNDEsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IjEyIEhvdXIgU2hpZnQiLCJvdmVydmlldyI6Ikl0J3MgMTk5OSBhbmQgb3ZlciB0aGUgY291cnNlIG9mIG9uZSAxMi1ob3VyIHNoaWZ0IGF0IGFuIEFya2Fuc2FzIGhvc3BpdGFsLCBhIGp1bmtpZSBudXJzZSwgaGVyIHNjaGVtaW5nIGNvdXNpbiBhbmQgYSBncm91cCBvZiBibGFjayBtYXJrZXQgb3JnYW4tdHJhZGluZyBjcmltaW5hbHMgc3RhcnQgYSBoZWlzdCB0aGF0IGNvdWxkIGxlYWQgdG8gdGhlaXIgY29sbGVjdGl2ZSBkZW1pc2UuIiwicG9wdWxhcml0eSI6NjkuNzI5LCJwb3N0ZXJfcGF0aCI6Ii9jM1NiWlBaUE9mR01IcTdEQjdGblRJTVFLdVkuanBnIiwicmVsZWFzZV9kYXRlIjoiMjAyMC0xMC0wMiIsInRpdGxlIjoiMTIgSG91ciBTaGlmdCIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo1LjMsInZvdGVfY291bnQiOjEyOX0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvcXN4aG5pcmxwN3k0QWU5YmQxMW9ZSlNYNTlqLmpwZyIsImdlbnJlX2lkcyI6WzEwNzUxLDE2LDM1LDE0LDEyLDEwNDAyXSwiaWQiOjQ0Njg5Mywib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiVHJvbGxzIFdvcmxkIFRvdXIiLCJvdmVydmlldyI6IlF1ZWVuIFBvcHB5IGFuZCBCcmFuY2ggbWFrZSBhIHN1cnByaXNpbmcgZGlzY292ZXJ5IOKAlCB0aGVyZSBhcmUgb3RoZXIgVHJvbGwgd29ybGRzIGJleW9uZCB0aGVpciBvd24sIGFuZCB0aGVpciBkaXN0aW5jdCBkaWZmZXJlbmNlcyBjcmVhdGUgYmlnIGNsYXNoZXMgYmV0d2VlbiB0aGVzZSB2YXJpb3VzIHRyaWJlcy4gV2hlbiBhIG15c3RlcmlvdXMgdGhyZWF0IHB1dHMgYWxsIG9mIHRoZSBUcm9sbHMgYWNyb3NzIHRoZSBsYW5kIGluIGRhbmdlciwgUG9wcHksIEJyYW5jaCwgYW5kIHRoZWlyIGJhbmQgb2YgZnJpZW5kcyBtdXN0IGVtYmFyayBvbiBhbiBlcGljIHF1ZXN0IHRvIGNyZWF0ZSBoYXJtb255IGFtb25nIHRoZSBmZXVkaW5nIFRyb2xscyB0byB1bml0ZSB0aGVtIGFnYWluc3QgY2VydGFpbiBkb29tLiIsInBvcHVsYXJpdHkiOjcyLjg5MiwicG9zdGVyX3BhdGgiOiIvN1cwRzNZRUNnREFmbnVpSEc5MXI4V3FnSU9lLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjIwMjAtMDMtMTEiLCJ0aXRsZSI6IlRyb2xscyBXb3JsZCBUb3VyIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjcuNSwidm90ZV9jb3VudCI6MTU3Mn0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvZVZqU2tDRWh4aEl3SEtpcWhOaUZGOWljZUF4LmpwZyIsImdlbnJlX2lkcyI6WzI4LDI3LDUzLDg3OF0sImlkIjo1NzM1NjAsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IlRoZSBDYXI6IFJvYWQgdG8gUmV2ZW5nZSIsIm92ZXJ2aWV3IjoiSW4gYSBkaWxhcGlkYXRlZCBjeWJlcnB1bmsgY2l0eSBwbGFndWVkIGJ5IGNyaW1lIGFuZCBjb3JydXB0aW9uLCBhbiB1bnNjcnVwdWxvdXMgRGlzdHJpY3QgQXR0b3JuZXkgaXMgc2F2YWdlbHkgbXVyZGVyZWQgYW5kIHRvc3NlZCBvdXQgb2YgYSBidWlsZGluZyBvbnRvIGhpcyBicmFuZCBuZXcgY2FyLiBNeXN0ZXJpb3VzbHksIHRoZSBEaXN0cmljdCBBdHRvcm5leSBhbmQgaGlzIGNhciBjb21lIGJhY2sgdG8gbGlmZSBhcyBhIHNpbmdsZSBiZWluZyB3aXRoIGEgdGhpcnN0IGZvciB2ZW5nZWFuY2UuIFRoZSBlZXJpZSBkcml2ZXItbGVzcyBjYXIgZW1iYXJrcyBvbiBhIHZpY2lvdXMgcmFtcGFnZSBleGFjdGluZyByZXZlbmdlIG9uIHRoZSBjcmltaW5hbHMgd2hvIG11cmRlcmVkIGhpbS4gVGhlIENhcjogUm9hZCB0byBSZXZlbmdlIGlzIHRoZSBzdHlsaXplZCBzZXF1ZWwgdG8gdGhlIHVuY29udmVudGlvbmFsIGhvcnJvciBjdWx0IGNsYXNzaWMgVGhlIENhciAoMTk3NyksIGFuZCBmZWF0dXJlcyBhbiBob21hZ2UgdG8gdGhlIG9yaWdpbmFsIHdpdGggdGhlIHJldHVybiBvZiBSb25ueSBDb3ggYXMgdGhlIE1lY2hhbmljLiIsInBvcHVsYXJpdHkiOjc3LjIzMywicG9zdGVyX3BhdGgiOiIvY3p5bklkRWlIanBHaFVXTW5vYXg3UTNsTUFFLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjIwMTktMDEtMDgiLCJ0aXRsZSI6IlRoZSBDYXI6IFJvYWQgdG8gUmV2ZW5nZSIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo2LjQsInZvdGVfY291bnQiOjc3fSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii84ZlBxQWhHM3h2SDB5bGxIdk53ZDhIMHJBbXguanBnIiwiZ2VucmVfaWRzIjpbMzVdLCJpZCI6ODIyNTYyLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVzIiwib3JpZ2luYWxfdGl0bGUiOiJTb3kgUmFkYTogU2VyZW5kaXBpYSIsIm92ZXJ2aWV3IjoiVGhlIGRlbGlnaHRmdWwgQXJnZW50aW5lIGNvbWljIEFndXN0w61uIEFyaXN0YXLDoW4gKGFrYSBTb3kgUmFkYSkgaXMgYmFjaywgdGhpcyB0aW1lIHB1dHRpbmcgdGhlIHNwb3RsaWdodCBvbiBmYW1pbHkgYW5kIHBhcmVudGluZywgbWFnaWMgYW5kIG11c2ljLiIsInBvcHVsYXJpdHkiOjcyLjY3MSwicG9zdGVyX3BhdGgiOiIvejg1VGVabUpZUWpmdmlKbVZOZExYUXQ4dUVlLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjIwMjEtMDUtMjciLCJ0aXRsZSI6IlNveSBSYWRhOiBTZXJlbmRpcGl0eSIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo0LjUsInZvdGVfY291bnQiOjN9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiL204ZHpQdTJpamV1MWFRQm9IaGIxNGh6akNseS5qcGciLCJnZW5yZV9pZHMiOlsxNiwyOCwxNCwxMl0sImlkIjo1NjcwMDYsIm9yaWdpbmFsX2xhbmd1YWdlIjoiamEiLCJvcmlnaW5hbF90aXRsZSI6IueUsumJhOWfjuOBruOCq+ODkOODjeODqu+9nua1t+mWgOaxuuaIpu+9niIsIm92ZXJ2aWV3IjoiSGFsZiBhIHllYXIgYWZ0ZXIgdGhlIGV2ZW50cyBvZiB0aGUgc2VyaWVzIFwiS2FiYW5lcmkgb2YgdGhlIElyb24gRm9ydHJlc3NcIiwgdGhlIHRlYW0gYXR0ZW1wdCB0byB0YWtlIGJhY2sgVW5hdG8gY2FzdGxlLiIsInBvcHVsYXJpdHkiOjgxLjg0NywicG9zdGVyX3BhdGgiOiIvNnQxZXN1WUhrT0ZPNVNlakFWRmx1NmFsQ2hyLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjIwMTktMDUtMTAiLCJ0aXRsZSI6IkthYmFuZXJpIG9mIHRoZSBJcm9uIEZvcnRyZXNzOiBUaGUgQmF0dGxlIG9mIFVuYXRvIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjcuNCwidm90ZV9jb3VudCI6MzF9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiL3hWVjhKclFLdUhWakJTNENmd0lNTmt0ZjcwRy5qcGciLCJnZW5yZV9pZHMiOls1MywyNyw4NzhdLCJpZCI6MzQ3NTQ4LCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJDb250YWlubWVudCIsIm92ZXJ2aWV3IjoiTmVpZ2hib3JzIGluIGEgYmxvY2sgd2FrZSBvbmUgbW9ybmluZyB0byBmaW5kIHRoZXkgaGF2ZSBiZWVuIHNlYWxlZCBpbnNpZGUgdGhlaXIgYXBhcnRtZW50cy4gQ2FuIHRoZXkgd29yayB0b2dldGhlciB0byBmaW5kIG91dCB3aHk/IE9yIHdpbGwgdGhleSBkZXN0cm95IGVhY2ggb3RoZXIgaW4gdGhlaXIgZmlnaHQgdG8gZXNjYXBlPyIsInBvcHVsYXJpdHkiOjYxLjM5NywicG9zdGVyX3BhdGgiOiIvak15dWRNNkxNOVZmSXNSOFpSZ2hsU3BBZGZ2LmpwZyIsInJlbGVhc2VfZGF0ZSI6IjIwMTUtMDctMDkiLCJ0aXRsZSI6IkNvbnRhaW5tZW50IiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjYsInZvdGVfY291bnQiOjExOX0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIveGpvdEU3YUZkWjBEOGFHcmlZakZPdERheWN0LmpwZyIsImdlbnJlX2lkcyI6WzE0LDEyLDI4LDEwNzUxLDEwNzQ5XSwiaWQiOjEwMjY1MSwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiTWFsZWZpY2VudCIsIm92ZXJ2aWV3IjoiQSBiZWF1dGlmdWwsIHB1cmUtaGVhcnRlZCB5b3VuZyB3b21hbiwgTWFsZWZpY2VudCBoYXMgYW4gaWR5bGxpYyBsaWZlIGdyb3dpbmcgdXAgaW4gYSBwZWFjZWFibGUgZm9yZXN0IGtpbmdkb20sIHVudGlsIG9uZSBkYXkgd2hlbiBhbiBpbnZhZGluZyBhcm15IHRocmVhdGVucyB0aGUgaGFybW9ueSBvZiB0aGUgbGFuZC4gIE1hbGVmaWNlbnQgcmlzZXMgdG8gYmUgdGhlIGxhbmQncyBmaWVyY2VzdCBwcm90ZWN0b3IsIGJ1dCBzaGUgdWx0aW1hdGVseSBzdWZmZXJzIGEgcnV0aGxlc3MgYmV0cmF5YWwg4oCTIGFuIGFjdCB0aGF0IGJlZ2lucyB0byB0dXJuIGhlciBoZWFydCBpbnRvIHN0b25lLiBCZW50IG9uIHJldmVuZ2UsIE1hbGVmaWNlbnQgZmFjZXMgYW4gZXBpYyBiYXR0bGUgd2l0aCB0aGUgaW52YWRpbmcgS2luZydzIHN1Y2Nlc3NvciBhbmQsIGFzIGEgcmVzdWx0LCBwbGFjZXMgYSBjdXJzZSB1cG9uIGhpcyBuZXdib3JuIGluZmFudCBBdXJvcmEuIEFzIHRoZSBjaGlsZCBncm93cywgTWFsZWZpY2VudCByZWFsaXplcyB0aGF0IEF1cm9yYSBob2xkcyB0aGUga2V5IHRvIHBlYWNlIGluIHRoZSBraW5nZG9tIOKAkyBhbmQgdG8gTWFsZWZpY2VudCdzIHRydWUgaGFwcGluZXNzIGFzIHdlbGwuIiwicG9wdWxhcml0eSI6NjcuNDk4LCJwb3N0ZXJfcGF0aCI6Ii9pazhQdWdwTDQxczEzN1JBV0VHVEFXdTBkUG8uanBnIiwicmVsZWFzZV9kYXRlIjoiMjAxNC0wNS0yOCIsInRpdGxlIjoiTWFsZWZpY2VudCIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo3LjEsInZvdGVfY291bnQiOjEwOTk5fSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii95Z0lIeEE4RUIyNDZmd25ObEhuNmdOMVFDZjQuanBnIiwiZ2VucmVfaWRzIjpbNTMsMjgsODBdLCJpZCI6MzQ2NzA5LCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJMaW5lIG9mIER1dHkiLCJvdmVydmlldyI6IkZyYW5rIFBlbm55IGlzIGEgZGlzZ3JhY2VkIGNvcCBsb29raW5nIGZvciBhIHNob3QgYXQgcmVkZW1wdGlvbi4gV2hlbiB0aGUgcG9saWNlIGNoaWVmJ3MgMTEteWVhci1vbGQgZGF1Z2h0ZXIgaXMgYWJkdWN0ZWQsIEZyYW5rIGdvZXMgcm9ndWUgdG8gdHJ5IGFuZCBzYXZlIGhlci4gQnV0IHRvIGZpbmQgdGhlIGdpcmwsIEZyYW5rIHdpbGwgbmVlZCB0aGUgaGVscCBvZiBBdmEgQnJvb2tzLCB3aG9zZSBsaXZlLXN0cmVhbWluZyBuZXdzIGNoYW5uZWwgaXMgYnJvYWRjYXN0aW5nIEZyYW5rJ3MgZXZlcnkgbW92ZS4iLCJwb3B1bGFyaXR5Ijo2OS44NzMsInBvc3Rlcl9wYXRoIjoiL3dNc3pkVG8wVXVHY0FFRURIc1FMOWRtd0xJRy5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDE5LTEyLTI1IiwidGl0bGUiOiJMaW5lIG9mIER1dHkiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6Niwidm90ZV9jb3VudCI6MTY3fSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii96aUMyM0xrTVlqOGdUb1FRWVFHV1NHSkNMTkYuanBnIiwiZ2VucmVfaWRzIjpbMTA3NTEsMTYsMzUsMTJdLCJpZCI6ODI2OTAsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IldyZWNrLUl0IFJhbHBoIiwib3ZlcnZpZXciOiJXcmVjay1JdCBSYWxwaCBpcyB0aGUgOS1mb290LXRhbGwsIDY0My1wb3VuZCB2aWxsYWluIG9mIGFuIGFyY2FkZSB2aWRlbyBnYW1lIG5hbWVkIEZpeC1JdCBGZWxpeCBKci4sIGluIHdoaWNoIHRoZSBnYW1lJ3MgdGl0dWxhciBoZXJvIGZpeGVzIGJ1aWxkaW5ncyB0aGF0IFJhbHBoIGRlc3Ryb3lzLiBXYW50aW5nIHRvIHByb3ZlIGhlIGNhbiBiZSBhIGdvb2QgZ3V5IGFuZCBub3QganVzdCBhIHZpbGxhaW4sIFJhbHBoIGVzY2FwZXMgaGlzIGdhbWUgYW5kIGxhbmRzIGluIEhlcm8ncyBEdXR5LCBhIGZpcnN0LXBlcnNvbiBzaG9vdGVyIHdoZXJlIGhlIGhlbHBzIHRoZSBnYW1lJ3MgaGVybyBiYXR0bGUgYWdhaW5zdCBhbGllbiBpbnZhZGVycy4gSGUgbGF0ZXIgZW50ZXJzIFN1Z2FyIFJ1c2gsIGEga2FydCByYWNpbmcgZ2FtZSBzZXQgb24gdHJhY2tzIG1hZGUgb2YgY2FuZGllcywgY29va2llcyBhbmQgb3RoZXIgc3dlZXRzLiBUaGVyZSwgUmFscGggbWVldHMgVmFuZWxsb3BlIHZvbiBTY2h3ZWV0eiB3aG8gaGFzIGxlYXJuZWQgdGhhdCBoZXIgZ2FtZSBpcyBmYWNlZCB3aXRoIGEgZGlyZSB0aHJlYXQgdGhhdCBjb3VsZCBhZmZlY3QgdGhlIGVudGlyZSBhcmNhZGUsIGFuZCBvbmUgdGhhdCBSYWxwaCBtYXkgaGF2ZSBpbmFkdmVydGVudGx5IHN0YXJ0ZWQuIiwicG9wdWxhcml0eSI6NzYuNTI4LCJwb3N0ZXJfcGF0aCI6Ii96V29JZ1o3bWdtUGthWmpHMDEwMkJTS0ZJcVEuanBnIiwicmVsZWFzZV9kYXRlIjoiMjAxMi0wMS0wMSIsInRpdGxlIjoiV3JlY2stSXQgUmFscGgiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6Ny4zLCJ2b3RlX2NvdW50Ijo5OTI3fSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii9xZHRoZjlXclJEU2FJa0dWUUdoaEo5cHoxaG4uanBnIiwiZ2VucmVfaWRzIjpbMjgsMTIsMTYsMTA3NTEsMzVdLCJpZCI6OTUwMiwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiS3VuZyBGdSBQYW5kYSIsIm92ZXJ2aWV3IjoiV2hlbiB0aGUgVmFsbGV5IG9mIFBlYWNlIGlzIHRocmVhdGVuZWQsIGxhenkgUG8gdGhlIHBhbmRhIGRpc2NvdmVycyBoaXMgZGVzdGlueSBhcyB0aGUgXCJjaG9zZW4gb25lXCIgYW5kIHRyYWlucyB0byBiZWNvbWUgYSBrdW5nIGZ1IGhlcm8sIGJ1dCB0cmFuc2Zvcm1pbmcgdGhlIHVuc2xlZWsgc2xhY2tlciBpbnRvIGEgYnJhdmUgd2FycmlvciB3b24ndCBiZSBlYXN5LiBJdCdzIHVwIHRvIE1hc3RlciBTaGlmdSBhbmQgdGhlIEZ1cmlvdXMgRml2ZSAtLSBUaWdyZXNzLCBDcmFuZSwgTWFudGlzLCBWaXBlciBhbmQgTW9ua2V5IC0tIHRvIGdpdmUgaXQgYSB0cnkuIiwicG9wdWxhcml0eSI6NzAuMjI0LCJwb3N0ZXJfcGF0aCI6Ii93V3Q0SllYVGc1V3IzeEJXMnBoQnJNS2dwM3guanBnIiwicmVsZWFzZV9kYXRlIjoiMjAwOC0wNi0wNCIsInRpdGxlIjoiS3VuZyBGdSBQYW5kYSIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo3LjIsInZvdGVfY291bnQiOjg1NTB9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiLzNaOFRRZWVCNHdDNXpFWHc0WHVneU8wdXBMVi5qcGciLCJnZW5yZV9pZHMiOlsyN10sImlkIjo0ODAxNTcsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IkhvdXNlIG9mIHRoZSBXaXRjaCIsIm92ZXJ2aWV3IjoiQSBncm91cCBvZiBoaWdoLXNjaG9vbCBraWRzIHNldCBvdXQgdG8gcGxheSBhIEhhbGxvd2VlbiBwcmFuayBhdCBhbiBhYmFuZG9uZWQgaG91c2UsIGJ1dCBvbmNlIHRoZXkgZW50ZXIgdGhleSBiZWNvbWUgdmljdGltcyBvZiBhIGRlbW9uaWMgd2l0Y2ggd2hvIGhhcyBzZXQgaGVyIHdyYXRoIHVwb24gdGhlbS4iLCJwb3B1bGFyaXR5Ijo2NC44NjEsInBvc3Rlcl9wYXRoIjoiL2NnNnhqWk9uR3NZWXFDN1NIM284b0pWOVZyMS5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDE3LTEwLTA3IiwidGl0bGUiOiJIb3VzZSBvZiB0aGUgV2l0Y2giLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6NC40LCJ2b3RlX2NvdW50Ijo5M30seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvc2FiYm1hSUtMRGcxM1hVc21pbU02amJyUGZYLmpwZyIsImdlbnJlX2lkcyI6WzM1XSwiaWQiOjIxNDc1Niwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiVGVkIDIiLCJvdmVydmlldyI6Ik5ld2x5d2VkIGNvdXBsZSBUZWQgYW5kIFRhbWktTHlubiB3YW50IHRvIGhhdmUgYSBiYWJ5LCBidXQgaW4gb3JkZXIgdG8gcXVhbGlmeSB0byBiZSBhIHBhcmVudCwgVGVkIHdpbGwgaGF2ZSB0byBwcm92ZSBoZSdzIGEgcGVyc29uIGluIGEgY291cnQgb2YgbGF3LiIsInBvcHVsYXJpdHkiOjczLjQyOSwicG9zdGVyX3BhdGgiOiIvMzhDOTFJN1hmdDBneVk3QklUbThpNHl2dVJiLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjIwMTUtMDYtMjUiLCJ0aXRsZSI6IlRlZCAyIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjYuMywidm90ZV9jb3VudCI6NTcyMH0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvYnZieWlka01hQmxzMUxUYUlXWVk2VW1ZVGFMLmpwZyIsImdlbnJlX2lkcyI6Wzg3OCwyOF0sImlkIjozMzY4NDMsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6Ik1hemUgUnVubmVyOiBUaGUgRGVhdGggQ3VyZSIsIm92ZXJ2aWV3IjoiVGhvbWFzIGxlYWRzIGhpcyBncm91cCBvZiBlc2NhcGVkIEdsYWRlcnMgb24gdGhlaXIgZmluYWwgYW5kIG1vc3QgZGFuZ2Vyb3VzIG1pc3Npb24geWV0LiBUbyBzYXZlIHRoZWlyIGZyaWVuZHMsIHRoZXkgbXVzdCBicmVhayBpbnRvIHRoZSBsZWdlbmRhcnkgTGFzdCBDaXR5LCBhIFdDS0QtY29udHJvbGxlZCBsYWJ5cmludGggdGhhdCBtYXkgdHVybiBvdXQgdG8gYmUgdGhlIGRlYWRsaWVzdCBtYXplIG9mIGFsbC4gQW55b25lIHdobyBtYWtlcyBpdCBvdXQgYWxpdmUgd2lsbCBnZXQgYW5zd2VycyB0byB0aGUgcXVlc3Rpb25zIHRoZSBHbGFkZXJzIGhhdmUgYmVlbiBhc2tpbmcgc2luY2UgdGhleSBmaXJzdCBhcnJpdmVkIGluIHRoZSBtYXplLiIsInBvcHVsYXJpdHkiOjYzLjc0NywicG9zdGVyX3BhdGgiOiIvMnpZZnpBM1RCd3JNQzh0ZkZicGlUTE9EZGUwLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjIwMTgtMDEtMTAiLCJ0aXRsZSI6Ik1hemUgUnVubmVyOiBUaGUgRGVhdGggQ3VyZSIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo3LjEsInZvdGVfY291bnQiOjU4NjN9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiL3pKRE11WFFEcmFIanRGNTN3aWtteUJRSWNZZS5qcGciLCJnZW5yZV9pZHMiOlsyOCwxMiwzNSwxNF0sImlkIjozNTM0ODYsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6Ikp1bWFuamk6IFdlbGNvbWUgdG8gdGhlIEp1bmdsZSIsIm92ZXJ2aWV3IjoiVGhlIHRhYmxlcyBhcmUgdHVybmVkIGFzIGZvdXIgdGVlbmFnZXJzIGFyZSBzdWNrZWQgaW50byBKdW1hbmppJ3Mgd29ybGQgLSBwaXR0ZWQgYWdhaW5zdCByaGlub3MsIGJsYWNrIG1hbWJhcyBhbmQgYW4gZW5kbGVzcyB2YXJpZXR5IG9mIGp1bmdsZSB0cmFwcyBhbmQgcHV6emxlcy4gVG8gc3Vydml2ZSwgdGhleSdsbCBwbGF5IGFzIGNoYXJhY3RlcnMgZnJvbSB0aGUgZ2FtZS4iLCJwb3B1bGFyaXR5Ijo2Mi43ODcsInBvc3Rlcl9wYXRoIjoiL3BTZ1hLUFU1aDZVODlpcEY3SEJZYWp2WXQ3ai5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDE3LTEyLTA5IiwidGl0bGUiOiJKdW1hbmppOiBXZWxjb21lIHRvIHRoZSBKdW5nbGUiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6Ni44LCJ2b3RlX2NvdW50IjoxMDgxMX0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvaTI1UXM4MjZlbGFTU0JyQXRKTVZPM21mdVpCLmpwZyIsImdlbnJlX2lkcyI6WzE2LDEwNzUxXSwiaWQiOjM4NzU3LCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJUYW5nbGVkIiwib3ZlcnZpZXciOiJXaGVuIHRoZSBraW5nZG9tJ3MgbW9zdCB3YW50ZWQtYW5kIG1vc3QgY2hhcm1pbmctYmFuZGl0IEZseW5uIFJpZGVyIGhpZGVzIG91dCBpbiBhIG15c3RlcmlvdXMgdG93ZXIsIGhlJ3MgdGFrZW4gaG9zdGFnZSBieSBSYXB1bnplbCwgYSBiZWF1dGlmdWwgYW5kIGZlaXN0eSB0b3dlci1ib3VuZCB0ZWVuIHdpdGggNzAgZmVldCBvZiBtYWdpY2FsLCBnb2xkZW4gaGFpci4gRmx5bm4ncyBjdXJpb3VzIGNhcHRvciwgd2hvJ3MgbG9va2luZyBmb3IgaGVyIHRpY2tldCBvdXQgb2YgdGhlIHRvd2VyIHdoZXJlIHNoZSdzIGJlZW4gbG9ja2VkIGF3YXkgZm9yIHllYXJzLCBzdHJpa2VzIGEgZGVhbCB3aXRoIHRoZSBoYW5kc29tZSB0aGllZiBhbmQgdGhlIHVubGlrZWx5IGR1byBzZXRzIG9mZiBvbiBhbiBhY3Rpb24tcGFja2VkIGVzY2FwYWRlLCBjb21wbGV0ZSB3aXRoIGEgc3VwZXItY29wIGhvcnNlLCBhbiBvdmVyLXByb3RlY3RpdmUgY2hhbWVsZW9uIGFuZCBhIGdydWZmIGdhbmcgb2YgcHViIHRodWdzLiIsInBvcHVsYXJpdHkiOjYxLjEyMSwicG9zdGVyX3BhdGgiOiIveW03S3N0NmE0dW9kcnl4cWJHT3htZXdGMjM1LmpwZyIsInJlbGVhc2VfZGF0ZSI6IjIwMTAtMTEtMjQiLCJ0aXRsZSI6IlRhbmdsZWQiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6Ny42LCJ2b3RlX2NvdW50Ijo4NjY4fSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii95SURTNVFMdkt0Z3pmdTQzZVVXeDVKa0dXNnAuanBnIiwiZ2VucmVfaWRzIjpbMTYsMjgsODc4XSwiaWQiOjEyNjk2Mywib3JpZ2luYWxfbGFuZ3VhZ2UiOiJqYSIsIm9yaWdpbmFsX3RpdGxlIjoi44OJ44Op44K044Oz44Oc44O844OrWiDnpZ7jgajnpZ4iLCJvdmVydmlldyI6IlRoZSBldmVudHMgb2YgQmF0dGxlIG9mIEdvZHMgdGFrZSBwbGFjZSBzb21lIHllYXJzIGFmdGVyIHRoZSBiYXR0bGUgd2l0aCBNYWppbiBCdXUsIHdoaWNoIGRldGVybWluZWQgdGhlIGZhdGUgb2YgdGhlIGVudGlyZSB1bml2ZXJzZS4gQWZ0ZXIgYXdha2VuaW5nIGZyb20gYSBsb25nIHNsdW1iZXIsIEJlZXJ1cywgdGhlIEdvZCBvZiBEZXN0cnVjdGlvbiBpcyB2aXNpdGVkIGJ5IFdoaXMsIGhpcyBhdHRlbmRhbnQgYW5kIGxlYXJucyB0aGF0IHRoZSBnYWxhY3RpYyBvdmVybG9yZCBGcmllemEgaGFzIGJlZW4gZGVmZWF0ZWQgYnkgYSBTdXBlciBTYWl5YW4gZnJvbSB0aGUgTm9ydGggUXVhZHJhbnQgb2YgdGhlIHVuaXZlcnNlIG5hbWVkIEdva3UsIHdobyBpcyBhbHNvIGEgZm9ybWVyIHN0dWRlbnQgb2YgdGhlIE5vcnRoIEthaS4gRWNzdGF0aWMgb3ZlciB0aGUgbmV3IGNoYWxsZW5nZSwgR29rdSBpZ25vcmVzIEtpbmcgS2FpJ3MgYWR2aWNlIGFuZCBiYXR0bGVzIEJlZXJ1cywgYnV0IGhlIGlzIGVhc2lseSBvdmVyd2hlbG1lZCBhbmQgZGVmZWF0ZWQuIEJlZXJ1cyBsZWF2ZXMsIGJ1dCBoaXMgZWVyaWUgcmVtYXJrIG9mIFwiSXMgdGhlcmUgbm9ib2R5IG9uIEVhcnRoIG1vcmUgd29ydGh5IHRvIGRlc3Ryb3k/XCIgbGluZ2VycyBvbi4gTm93IGl0IGlzIHVwIHRvIHRoZSBoZXJvZXMgdG8gc3RvcCB0aGUgR29kIG9mIERlc3RydWN0aW9uIGJlZm9yZSBhbGwgaXMgbG9zdC4iLCJwb3B1bGFyaXR5Ijo2NC43NjIsInBvc3Rlcl9wYXRoIjoiL254WkVkWWNITXVEOFNTdXd1c0RuSzlDRDJIMS5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDEzLTAzLTMwIiwidGl0bGUiOiJEcmFnb24gQmFsbCBaOiBCYXR0bGUgb2YgR29kcyIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo2LjgsInZvdGVfY291bnQiOjEwNzZ9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiL3ZLQ2lZS2dUWVZsc0RhZWNFS0ZPWUc3Wk0xNS5qcGciLCJnZW5yZV9pZHMiOlsxMiwzNSwxMDc1MSwxMDc0OV0sImlkIjoxNDQwNSwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiQmV2ZXJseSBIaWxscyBDaGlodWFodWEiLCJvdmVydmlldyI6IkEgcGFtcGVyZWQgQmV2ZXJseSBIaWxscyBjaGlodWFodWEgbmFtZWQgQ2hsb2Ugd2hvLCB3aGlsZSBvbiB2YWNhdGlvbiBpbiBNZXhpY28gd2l0aCBoZXIgb3duZXIgVml2J3MgbmllY2UsIFJhY2hlbCwgZ2V0cyBsb3N0IGFuZCBtdXN0IHJlbHkgb24gaGVyIGZyaWVuZHMgdG8gaGVscCBoZXIgZ2V0IGJhY2sgaG9tZSBiZWZvcmUgc2hlIGlzIGNhdWdodCBieSBhIGRvZ25hcHBlciB3aG8gd2FudHMgdG8gcmFuc29tIGhlci4iLCJwb3B1bGFyaXR5Ijo3NS4yNTgsInBvc3Rlcl9wYXRoIjoiLzJhUnZxdExvRTA2aFRqRzkzbEFTdk83cjFhcy5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDA4LTEwLTAzIiwidGl0bGUiOiJCZXZlcmx5IEhpbGxzIENoaWh1YWh1YSIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo1LjMsInZvdGVfY291bnQiOjc3OH0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvdzdNc3lPcFAwMDNGWWhzaVRnVkhhM3JOc3J6LmpwZyIsImdlbnJlX2lkcyI6WzE4LDEyLDEwNzUxXSwiaWQiOjUwODc2Mywib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiQSBEb2cncyBXYXkgSG9tZSIsIm92ZXJ2aWV3IjoiVGhlIGFkdmVudHVyZSBvZiBCZWxsYSwgYSBkb2cgd2hvIGVtYmFya3Mgb24gYW4gZXBpYyA0MDAtbWlsZSBqb3VybmV5IGhvbWUgYWZ0ZXIgc2hlIGlzIHNlcGFyYXRlZCBmcm9tIGhlciBiZWxvdmVkIGh1bWFuLiIsInBvcHVsYXJpdHkiOjQ5LjAyNCwicG9zdGVyX3BhdGgiOiIvcFpuODdSN2d0bU1DR0dPOEtlYUFmWkRoWExnLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjIwMTktMDEtMTAiLCJ0aXRsZSI6IkEgRG9nJ3MgV2F5IEhvbWUiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6Ny4xLCJ2b3RlX2NvdW50Ijo3MzF9XSwidG90YWxfcGFnZXMiOjUwMCwidG90YWxfcmVzdWx0cyI6MTAwMDB9
  recorded_at: Thu, 15 Jul 2021 01:16:45 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/discover/movie?api_key=6b310e0dcdbc8d375cce6ea3bf466eea&page=27&sort_by=popularity.desc
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.4.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 15 Jul 2021 01:16:45 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 e158a5cd644f102abc630a9f56b59d78.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - mJhd_khZRBOuKCVQKP_fGiCtU6Sk92nv3gusJdT6Fu6zSCJ88Ya5HQ==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 15 Jul 2021 01:16:45 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/discover/movie?api_key=6b310e0dcdbc8d375cce6ea3bf466eea&page=28&sort_by=popularity.desc
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.4.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 15 Jul 2021 01:16:45 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 23d87d8c2ce38e34462e6c134d187eeb.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - VSLjPNZhvbpxosZiNR2jZWAvVIRzt2xgP0vn5GOc50p6DDx-4GPeVQ==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 15 Jul 2021 01:16:45 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/discover/movie?api_key=6b310e0dcdbc8d375cce6ea3bf466eea&page=29&sort_by=popularity.desc
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.4.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 15 Jul 2021 01:16:45 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 e1b5abb53c407f0a057625c46693461d.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - 6NyDPykeHZbu6btNVCMiTBH4C6mmY3BdfSwV0oHuqR28NRoXBAm9Kw==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 15 Jul 2021 01:16:45 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/discover/movie?api_key=6b310e0dcdbc8d375cce6ea3bf466eea&page=30&sort_by=popularity.desc
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.4.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 15 Jul 2021 01:16:45 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 9cefde3a3c84cc779d3c26a39c2e4430.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - ex5LolFpVHXebut9No1HUbaXCSZMUD0cTZlW5i070WrtthuhssyoFQ==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 15 Jul 2021 01:16:45 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/discover/movie?api_key=6b310e0dcdbc8d375cce6ea3bf466eea&page=31&sort_by=popularity.desc
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.4.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 15 Jul 2021 01:16:46 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 c29390732f5bc4b2c7832623ae6e492f.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - U8O-HvyEVu5OIe75gLrVATsGC1q_8hIwVM67pfcogOPQZvGrKBbUAw==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 15 Jul 2021 01:16:46 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/discover/movie?api_key=6b310e0dcdbc8d375cce6ea3bf466eea&page=32&sort_by=popularity.desc
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.4.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 15 Jul 2021 01:16:46 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 dc50b0effd72a7b2c19bcb0909cfae82.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - 6h8Npu62H5JDtWKiPaFsOuDwOwsjG4ZsawDX24RS2obcb_Wy8v6hfA==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 15 Jul 2021 01:16:46 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/discover/movie?api_key=6b310e0dcdbc8d375cce6ea3bf466eea&page=33&sort_by=popularity.desc
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.4.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 15 Jul 2021 01:16:46 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 1e5c934b70471a41d2b61ae8c4abeb79.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - _qN4R2y2TmA4McGmSkVhJ3w4luYBtX_TkS0g248g0vWyTCKkGck4MA==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 15 Jul 2021 01:16:46 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/discover/movie?api_key=6b310e0dcdbc8d375cce6ea3bf466eea&page=34&sort_by=popularity.desc
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.4.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 15 Jul 2021 01:16:46 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 1e5c934b70471a41d2b61ae8c4abeb79.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - j6ozOVrPJGGW2nVVtn-cHxgNQJ8Etf1ou1Ysie4mU-_e03jN2oVAVg==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 15 Jul 2021 01:16:46 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/discover/movie?api_key=6b310e0dcdbc8d375cce6ea3bf466eea&page=35&sort_by=popularity.desc
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.4.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 15 Jul 2021 01:16:46 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 4d0ecb5905192435c3fd204705c9fc24.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - E2gqFxGL3Ii-Tnt7hf5Eg3d8NwQsCuUBRAQXpfVCFbuRd99_kQm-Zg==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 15 Jul 2021 01:16:46 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/discover/movie?api_key=6b310e0dcdbc8d375cce6ea3bf466eea&page=36&sort_by=popularity.desc
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.4.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 15 Jul 2021 01:16:47 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 ec4d04f2befcd6652834fd368a8b671e.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - THSS6cbnvlQBHcNgfdESj_dc2cH5_3LaZUFIs2p5EXIfBCiiLGU6jQ==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 15 Jul 2021 01:16:47 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/discover/movie?api_key=6b310e0dcdbc8d375cce6ea3bf466eea&page=37&sort_by=popularity.desc
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.4.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 15 Jul 2021 01:16:47 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 cddde15c11afac53ac9fe7978dcfecd7.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - MwTDlvQ39DTeIiYiILSwADxMex6VhGNAH9AD8Y3aPNVa20M2qtbXNg==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 15 Jul 2021 01:16:47 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/discover/movie?api_key=6b310e0dcdbc8d375cce6ea3bf466eea&page=38&sort_by=popularity.desc
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.4.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 15 Jul 2021 01:16:47 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 cddde15c11afac53ac9fe7978dcfecd7.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - _db8R8qkiNP_VKuKNc1a0nyWDfrtcoCjFHhRjowXVb3lq9Ce_HRqVA==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 15 Jul 2021 01:16:47 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/discover/movie?api_key=6b310e0dcdbc8d375cce6ea3bf466eea&page=39&sort_by=popularity.desc
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.4.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 15 Jul 2021 01:16:47 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 e7ff4a714a3b1f464db9c76ee954a565.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - 3mo7_FU7_dgqV4UE3EVWzRMqElTnaAPsyyXowf8dBAWbCT9cSEDY3w==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 15 Jul 2021 01:16:47 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/discover/movie?api_key=6b310e0dcdbc8d375cce6ea3bf466eea&page=40&sort_by=popularity.desc
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.4.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 15 Jul 2021 01:16:47 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 e158a5cd644f102abc630a9f56b59d78.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - S8Cj1MWgdtkiFaGLHW3l5oWNVXSHXSmQ469zHIBHqTOw_1-jYpFYfg==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 15 Jul 2021 01:16:47 GMT
recorded_with: VCR 6.0.0
